{
    "+bugvoice": {
        "title": "+bugvoice",
        "description": "Start recording bug voice attachment.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "+camdistance": {
        "title": "+camdistance",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "+cammousemove": {
        "title": "+cammousemove",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "+cl_show_team_equipment": {
        "title": "+cl_show_team_equipment",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+lookatweapon": {
        "title": "+lookatweapon",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+quickbuyradial": {
        "title": "+quickbuyradial",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+quickgearradial": {
        "title": "+quickgearradial",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "+quickgrenaderadial": {
        "title": "+quickgrenaderadial",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+quickinv": {
        "title": "+quickinv",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+radialradio": {
        "title": "+radialradio",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+radialradio2": {
        "title": "+radialradio2",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+radialradio3": {
        "title": "+radialradio3",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "+spray_menu": {
        "title": "+spray_menu",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-bugvoice": {
        "title": "-bugvoice",
        "description": "Finish recording bug voice attachment.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "-camdistance": {
        "title": "-camdistance",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "-cammousemove": {
        "title": "-cammousemove",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "-cl_show_team_equipment": {
        "title": "-cl_show_team_equipment",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-lookatweapon": {
        "title": "-lookatweapon",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-quickbuyradial": {
        "title": "-quickbuyradial",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-quickgearradial": {
        "title": "-quickgearradial",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "-quickgrenaderadial": {
        "title": "-quickgrenaderadial",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-quickinv": {
        "title": "-quickinv",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-radialradio": {
        "title": "-radialradio",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-radialradio2": {
        "title": "-radialradio2",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-radialradio3": {
        "title": "-radialradio3",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "-spray_menu": {
        "title": "-spray_menu",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "<unknown>": {
        "title": "<unknown>",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hide"
        ]
    },
    "createpredictionerror": {
        "title": "CreatePredictionError",
        "description": "Create a prediction error",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "showsteamstatssessionid": {
        "title": "ShowSteamStatsSessionID",
        "description": "Prints out the game stats session ID's (developer convar must be set to non-zero).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "stackstats_dump": {
        "title": "StackStats_Dump",
        "description": "Dump a named stackstats structure to disk. Usage: stackstats_dump \"structname\" [\"filename\"]",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "test_checkpoint": {
        "title": "Test_Checkpoint",
        "description": "Indicate to a test script that a checkpoint has been reached",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "test_createentity": {
        "title": "Test_CreateEntity",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "test_ehandle": {
        "title": "Test_EHandle",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "test_exitprocess": {
        "title": "Test_ExitProcess",
        "description": "Test_ExitProcess <exit code> - immediately kill the process.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "test_loop": {
        "title": "Test_Loop",
        "description": "Test_Loop <loop name> - loop back to the specified loop start point unconditionally.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "test_loopcount": {
        "title": "Test_LoopCount",
        "description": "Test_LoopCount <loop name> <count> - loop back to the specified loop start point the specified # of times.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "test_loopfornumseconds": {
        "title": "Test_LoopForNumSeconds",
        "description": "Test_LoopForNumSeconds <loop name> <time> - loop back to the specified start point for the specified # of seconds.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "test_randomchance": {
        "title": "Test_RandomChance",
        "description": "Test_RandomChance <percent chance, 0-100> <token1> <token2...> - Roll the dice and maybe run the command following the percentage chance.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "test_randomplayerposition": {
        "title": "Test_RandomPlayerPosition",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "test_startloop": {
        "title": "Test_StartLoop",
        "description": "Test_StartLoop <loop name> - Denote the start of a loop. Really just defines a named point you can jump to.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "test_startscript": {
        "title": "Test_StartScript",
        "description": "Start a test script running..",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "_record": {
        "title": "_record",
        "description": "Record a demo incrementally.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "_resetgamestats": {
        "title": "_resetgamestats",
        "description": "Erases current game stats and writes out a blank stats file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "addip": {
        "title": "addip",
        "description": "Add an IP address to the ban list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "addons": {
        "title": "addons",
        "description": "list current addon info.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "alias": {
        "title": "alias",
        "description": "Alias a command.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "anim_eval_stats": {
        "title": "anim_eval_stats",
        "description": "Displays stats about how many EvaluatePose calls are unused",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "animevents_dump": {
        "title": "animevents_dump",
        "description": "List all the currently registered anim events.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "animgraph_dump_update_list": {
        "title": "animgraph_dump_update_list",
        "description": "Displays stats about which animations are updating",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "animgraph_set_parameter_bool": {
        "title": "animgraph_set_parameter_bool",
        "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.",
        "args": " <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "animgraph_set_parameter_enum": {
        "title": "animgraph_set_parameter_enum",
        "description": "Specified entities will have the specified enum parameter set to the value specified.  Useful for animators to test.",
        "args": " <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "animgraph_set_parameter_float": {
        "title": "animgraph_set_parameter_float",
        "description": "Specified entities will have the specified float parameter set to the value specified.  Useful for animators to test.",
        "args": " <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "animgraph_set_parameter_int": {
        "title": "animgraph_set_parameter_int",
        "description": "Specified entities will have the specified int parameter set to the value specified.  Useful for animators to test.",
        "args": " <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "animgraph_set_parameter_string": {
        "title": "animgraph_set_parameter_string",
        "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.",
        "args": " <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "animgraph_set_parameter_vector": {
        "title": "animgraph_set_parameter_vector",
        "description": "Specified entities will have the specified vector parameter set to the value specified.  Useful for animators to test.",
        "args": " <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "annotation_append": {
        "title": "annotation_append",
        "description": "Load annotation to a file without clearing existing annotations",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "annotation_clear": {
        "title": "annotation_clear",
        "description": "Clear all annotation",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "annotation_create": {
        "title": "annotation_create",
        "description": "Creates an annotation",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "annotation_delete_previous_node_set": {
        "title": "annotation_delete_previous_node_set",
        "description": "Delete the last node set created",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "annotation_load": {
        "title": "annotation_load",
        "description": "Load annotation to a file after first clearing existing annotations",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "annotation_reload": {
        "title": "annotation_reload",
        "description": "Reload the annotation file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "annotation_reload_language_file": {
        "title": "annotation_reload_language_file",
        "description": "Creates an annotation",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "annotation_save": {
        "title": "annotation_save",
        "description": "Save annotation to a file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "apply_crosshair_code": {
        "title": "apply_crosshair_code",
        "description": "Apply a crosshair code to the current crosshair settings.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "auto_bug": {
        "title": "auto_bug",
        "description": "auto_bug : create non-interactive bug report.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "autobuy": {
        "title": "autobuy",
        "description": "Attempt to purchase items with the order listed in cl_autobuy",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "autosave": {
        "title": "autosave",
        "description": "Autosave",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "autosavedangerous": {
        "title": "autosavedangerous",
        "description": "AutoSaveDangerous",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "autosavedangerousissafe": {
        "title": "autosavedangerousissafe",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "axis": {
        "title": "axis",
        "description": "Draw an axis",
        "args": "  x y z pitch yaw roll <lifetime = 10.0> <r g b a>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "banid": {
        "title": "banid",
        "description": "Add a user ID to the ban list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "banip": {
        "title": "banip",
        "description": "Add an IP address to the ban list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "benchframe": {
        "title": "benchframe",
        "description": "Takes a snapshot of a particular frame in a time demo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "bind": {
        "title": "bind",
        "description": "Bind a key.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "binddefaults": {
        "title": "binddefaults",
        "description": "Bind all keys to their default values.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "bindss": {
        "title": "bindss",
        "description": "Bind a key for a particular splitscreen player.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "bindtoggle": {
        "title": "bindtoggle",
        "description": "Performs a bind <key> \"increment var <cvar> 0 1 1\".",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "blink": {
        "title": "blink",
        "description": "Blink specified convar value between two values at the specified duration.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "bot_add": {
        "title": "bot_add",
        "description": "bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "bot_add_ct": {
        "title": "bot_add_ct",
        "description": "bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "bot_add_t": {
        "title": "bot_add_t",
        "description": "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "bot_all_weapons": {
        "title": "bot_all_weapons",
        "description": "Allows the bots to use all weapons",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "bot_goto_mark": {
        "title": "bot_goto_mark",
        "description": "Sends a bot to the marked nav area (useful for testing navigation meshes)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "bot_goto_selected": {
        "title": "bot_goto_selected",
        "description": "Sends a bot to the selected nav area (useful for testing navigation meshes)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "bot_kick": {
        "title": "bot_kick",
        "description": "bot_kick <all> <t|ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "bot_kill": {
        "title": "bot_kill",
        "description": "bot_kill <all> <t|ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "bot_knives_only": {
        "title": "bot_knives_only",
        "description": "Restricts the bots to only using knives",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "bot_pistols_only": {
        "title": "bot_pistols_only",
        "description": "Restricts the bots to only using pistols",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "bot_place": {
        "title": "bot_place",
        "description": "bot_place - Places a bot from the map at where the local player is pointing.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "bot_snipers_only": {
        "title": "bot_snipers_only",
        "description": "Restricts the bots to only using sniper rifles",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "box": {
        "title": "box",
        "description": "Draw a bbox",
        "args": "  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "breakable_force_break": {
        "title": "breakable_force_break",
        "description": "Force a breakable to break",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "bug": {
        "title": "bug",
        "description": "bug [auto_fill_tokens] [-title <text>] [-noscreenshot] : Activate the bug reporter.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "bugvoice_clear": {
        "title": "bugvoice_clear",
        "description": "Clear voice attachment data.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "bugvoice_save": {
        "title": "bugvoice_save",
        "description": "Write buffered voice attachment data to file.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "buildcubemaps": {
        "title": "buildcubemaps",
        "description": "Build Cubemaps",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "buildsparseshadowtree": {
        "title": "buildsparseshadowtree",
        "description": "Build Sparse Shadow Tree",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "hidden"
        ]
    },
    "button_info": {
        "title": "button_info",
        "description": "Display information about the specified key or button.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "buymenu": {
        "title": "buymenu",
        "description": "Show or hide main buy menu",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "buyrandom": {
        "title": "buyrandom",
        "description": "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "callvote": {
        "title": "callvote",
        "description": "Start a vote on an issue.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "cam_command": {
        "title": "cam_command",
        "description": "Tells camera to change modes",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "camera_cut_to_datadriven_camera": {
        "title": "camera_cut_to_datadriven_camera",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "hidden",
            "defensive"
        ]
    },
    "camerazoomin": {
        "title": "camerazoomin",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "camerazoomout": {
        "title": "camerazoomout",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "camortho": {
        "title": "camortho",
        "description": "Switch to orthographic camera.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cancelselect": {
        "title": "cancelselect",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "capturecubemap": {
        "title": "capturecubemap",
        "description": "Capture Cubemap",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cast_aabb": {
        "title": "cast_aabb",
        "description": "Tests box collision detection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_bullet": {
        "title": "cast_bullet",
        "description": "Tests bullet cast",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_capsule": {
        "title": "cast_capsule",
        "description": "Tests capsule collision detection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_convex": {
        "title": "cast_convex",
        "description": "Tests convex hull collision detection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_cylinder": {
        "title": "cast_cylinder",
        "description": "Tests cylinder collision detection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_intervals": {
        "title": "cast_intervals",
        "description": "Tests interval ray cast",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_obb": {
        "title": "cast_obb",
        "description": "Tests cylinder collision detection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_physics": {
        "title": "cast_physics",
        "description": "Tests physics shape collision detection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_ray": {
        "title": "cast_ray",
        "description": "Tests ray cast",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cast_sphere": {
        "title": "cast_sphere",
        "description": "Tests sphere cast",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "cc_emit": {
        "title": "cc_emit",
        "description": "Emits a closed caption",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cc_findsound": {
        "title": "cc_findsound",
        "description": "Searches for soundname which emits specified text.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cc_flush": {
        "title": "cc_flush",
        "description": "Flushes async'd captions.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cc_random": {
        "title": "cc_random",
        "description": "Emits a random caption",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cc_showblocks": {
        "title": "cc_showblocks",
        "description": "Toggles showing which blocks are pending/loaded async.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "changelevel": {
        "title": "changelevel",
        "description": "changelevel <mapname> :Multiplayer change level.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "check_nofilefd": {
        "title": "check_nofilefd",
        "description": "Print the current number of FDs reported by getrlimit",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "cl_anim_eval_stats": {
        "title": "cl_anim_eval_stats",
        "description": "Displays stats about how many EvaluatePose calls are unused",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_animgraph_dump_update_list": {
        "title": "cl_animgraph_dump_update_list",
        "description": "Displays stats about which animations are updating",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_avatar_convert_png": {
        "title": "cl_avatar_convert_png",
        "description": "Converts all rgb avatars in the avatars directory to png",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "release"
        ]
    },
    "cl_avatar_convert_rgb": {
        "title": "cl_avatar_convert_rgb",
        "description": "Converts all png avatars in the avatars directory to rgb",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "release"
        ]
    },
    "cl_axis": {
        "title": "cl_axis",
        "description": "Draw an axis",
        "args": "  x y z pitch yaw roll <lifetime = 10.0> <r g b a>",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_box": {
        "title": "cl_box",
        "description": "Draw a bbox",
        "args": "  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_break_on_missing_resource": {
        "title": "cl_break_on_missing_resource",
        "description": "Break in debugger when missing resource match is found.",
        "args": " cl_break_on_missing_resource <substring> /(empty to break on all) / 0 to turn off.",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "cl_checkdeclareclasses": {
        "title": "cl_checkdeclareclasses",
        "description": "Check game code serializers",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "cl_cs_dump_econ_item_stringtable": {
        "title": "cl_cs_dump_econ_item_stringtable",
        "description": "cl_cs_dump_econ_item_stringtable",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_debugoverlay_cycle_domain": {
        "title": "cl_debugoverlay_cycle_domain",
        "description": "Toggles visibility of the debug overlay system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_debugoverlay_cycle_state": {
        "title": "cl_debugoverlay_cycle_state",
        "description": "Toggles visibility of the debug overlay system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_debugoverlay_dashboard": {
        "title": "cl_debugoverlay_dashboard",
        "description": "Makes the debug overlay dashboard visible.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_debugoverlay_hide_imgui": {
        "title": "cl_debugoverlay_hide_imgui",
        "description": "Hides the overlay.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_debugoverlay_toggle": {
        "title": "cl_debugoverlay_toggle",
        "description": "Toggles visibility of the debug overlay system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_destroy_ragdolls": {
        "title": "cl_destroy_ragdolls",
        "description": "Destroys all client-side ragdolls",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_dev_decaltrace_blood": {
        "title": "cl_dev_decaltrace_blood",
        "description": "Shoot out a decal spray that shoots blood.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "cheat"
        ]
    },
    "cl_drawcross": {
        "title": "cl_drawcross",
        "description": "Draws a cross at the given location",
        "args": " x y z",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_drawline": {
        "title": "cl_drawline",
        "description": "Draws line between two 3D Points.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_dump_player_animgraph_state": {
        "title": "cl_dump_player_animgraph_state",
        "description": "Dumps the local player's animgraph state to console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_dump_projected_texture_count": {
        "title": "cl_dump_projected_texture_count",
        "description": "Print out number of active projected textures",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_dump_response_symbols": {
        "title": "cl_dump_response_symbols",
        "description": "print all response symbols to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_dumpentity": {
        "title": "cl_dumpentity",
        "description": "Dumps info about an entity",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_dumpsplithacks": {
        "title": "cl_dumpsplithacks",
        "description": "Dump split screen workarounds.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_ent_absbox": {
        "title": "cl_ent_absbox",
        "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_actornames": {
        "title": "cl_ent_actornames",
        "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_animgraph_debug": {
        "title": "cl_ent_animgraph_debug",
        "description": "Displays debug draws about the given entity(ies) animgraph",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_animgraph_record": {
        "title": "cl_ent_animgraph_record",
        "description": "Toggles recording of animgraph replay of the given entity(s)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_attachments": {
        "title": "cl_ent_attachments",
        "description": "Displays the attachment points on an entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_bbox": {
        "title": "cl_ent_bbox",
        "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_call": {
        "title": "cl_ent_call",
        "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_clear_debug_overlays": {
        "title": "cl_ent_clear_debug_overlays",
        "description": "Clears all debug overlays",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_find": {
        "title": "cl_ent_find",
        "description": "Find and list all entities with classnames or targetnames that contain the specified substrings.",
        "args": " find_ent <substring>",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_find_index": {
        "title": "cl_ent_find_index",
        "description": "Display data for entity matching specified index.",
        "args": " find_ent_index <index>",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_grab": {
        "title": "cl_ent_grab",
        "description": "grabs the object in front of the player. Options: -loose -multiple -toggle",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_hierarchy": {
        "title": "cl_ent_hierarchy",
        "description": "Prints the entity hierarchy tree rooted at the specified ent(s)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_hitbox": {
        "title": "cl_ent_hitbox",
        "description": "Displays the hitboxes for the given entity(ies).",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_joints": {
        "title": "cl_ent_joints",
        "description": "Displays the joint names + axes an entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_messages": {
        "title": "cl_ent_messages",
        "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_name": {
        "title": "cl_ent_name",
        "description": "Displays the entity name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_picker": {
        "title": "cl_ent_picker",
        "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.",
        "args": "\tfull - enables all debug information",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_pivot": {
        "title": "cl_ent_pivot",
        "description": "Displays the pivot for the given entity(ies).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_remove": {
        "title": "cl_ent_remove",
        "description": "Removes the given entity(s)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_remove_all": {
        "title": "cl_ent_remove_all",
        "description": "Removes all entities of the specified type",
        "args": "   \t{entity_name} / {class_name} ",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_scale": {
        "title": "cl_ent_scale",
        "description": "Scales entities.\tArguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_scenehierarchy": {
        "title": "cl_ent_scenehierarchy",
        "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_script_dump": {
        "title": "cl_ent_script_dump",
        "description": "Dumps the names and values of this entity's script scope to the console",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_select": {
        "title": "cl_ent_select",
        "description": "Select or deselects the given entities(s) for later manipulation",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_setang": {
        "title": "cl_ent_setang",
        "description": "Set entity angles",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "client_can_execute"
        ]
    },
    "cl_ent_setname": {
        "title": "cl_ent_setname",
        "description": "Sets the targetname of the given entity(s)",
        "args": "   \t<new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_setpos": {
        "title": "cl_ent_setpos",
        "description": "Move entity to position",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "client_can_execute"
        ]
    },
    "cl_ent_show_damage": {
        "title": "cl_ent_show_damage",
        "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_skeleton": {
        "title": "cl_ent_skeleton",
        "description": "Displays the skeleton for the given entity(ies).",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_spew_derived_classes": {
        "title": "cl_ent_spew_derived_classes",
        "description": "Prints out all entity classes which inherit from a specified base class",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_ent_text": {
        "title": "cl_ent_text",
        "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "cl_ent_text256": {
        "title": "cl_ent_text256",
        "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_text_clear": {
        "title": "cl_ent_text_clear",
        "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_text_filter": {
        "title": "cl_ent_text_filter",
        "description": "Set which ent_text filters you want:",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_text_radius": {
        "title": "cl_ent_text_radius",
        "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)",
        "args": "   \t<Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_text_sticky_add": {
        "title": "cl_ent_text_sticky_add",
        "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_text_sticky_clear": {
        "title": "cl_ent_text_sticky_clear",
        "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_text_sticky_dump": {
        "title": "cl_ent_text_sticky_dump",
        "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_text_sticky_remove": {
        "title": "cl_ent_text_sticky_remove",
        "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_ungrab": {
        "title": "cl_ent_ungrab",
        "description": "un-grabs all objects",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_vcollide_wireframe": {
        "title": "cl_ent_vcollide_wireframe",
        "description": "Displays the interpolated vcollide wireframe pm am entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_viewoffset": {
        "title": "cl_ent_viewoffset",
        "description": "Displays the eye position for the given entity(ies) in red.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ent_visibility_traces": {
        "title": "cl_ent_visibility_traces",
        "description": "Displays visibility traces for the given entity",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "cl_ents": {
        "title": "cl_ents",
        "description": "List client entities, sorted by spawn group",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_fullupdate": {
        "title": "cl_fullupdate",
        "description": "Force uncompressed update",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "cl_game_mode_convars": {
        "title": "cl_game_mode_convars",
        "description": "Display the values of the convars for the current game_mode.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_imgui_debug_entity": {
        "title": "cl_imgui_debug_entity",
        "description": "Shows the entity browswer, focused on the entity you specify.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_imgui_set_selection": {
        "title": "cl_imgui_set_selection",
        "description": "Sets ImGui selection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_imgui_set_status_text": {
        "title": "cl_imgui_set_status_text",
        "description": "Sets ImGui header status text",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_in_forcebuttonstate": {
        "title": "cl_in_forcebuttonstate",
        "description": "Forces a button to be a particular state - WHEN PROCESSING USERCOMMANDS",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "vconsole_fuzzy_matching"
        ]
    },
    "cl_interp": {
        "title": "cl_interp",
        "description": "Read the effective client simulation interpolation amount in terms of time.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "cl_mainmenu_hide_blog": {
        "title": "cl_mainmenu_hide_blog",
        "description": "Show the news panel and hide blog",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "cl_mainmenu_show_blog": {
        "title": "cl_mainmenu_show_blog",
        "description": "Show the blog and hide news panel",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "cl_matchstats_print_own_data": {
        "title": "cl_matchstats_print_own_data",
        "description": "cl_matchstats_print_own_data RANGENAME",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_particles_dump_effects": {
        "title": "cl_particles_dump_effects",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_particles_dumplist": {
        "title": "cl_particles_dumplist",
        "description": "Dump all new particles, optional name substring.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_particles_dumpsimlist": {
        "title": "cl_particles_dumpsimlist",
        "description": "Dump all simulating particles, optional name substring.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_phys_create_test_character_proxy": {
        "title": "cl_phys_create_test_character_proxy",
        "description": "Create test character proxy",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_dump_intersection_controller": {
        "title": "cl_phys_dump_intersection_controller",
        "description": "Dump intersection controller status",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_dump_main_world": {
        "title": "cl_phys_dump_main_world",
        "description": "Dump physics main world to file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_dump_memory": {
        "title": "cl_phys_dump_memory",
        "description": "Dump memory usage",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_list": {
        "title": "cl_phys_list",
        "description": "List all physics component contents of every entity in the game;",
        "args": " initiate|terminate streaming to physics debugger",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_record_rays": {
        "title": "cl_phys_record_rays",
        "description": "Dump physics main world to file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_record_rays_and_world": {
        "title": "cl_phys_record_rays_and_world",
        "description": "Dump traces physics main world to file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_sleep": {
        "title": "cl_phys_sleep",
        "description": "Put all physics in all the worlds to sleep",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_phys_wakeup": {
        "title": "cl_phys_wakeup",
        "description": "Wake all physics objects in the Main physics up",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_physics_add_test": {
        "title": "cl_physics_add_test",
        "description": "add test object",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_physics_highlight_active": {
        "title": "cl_physics_highlight_active",
        "description": "Turns on the absbox for all active physics objects.",
        "args": " un-highlight.",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_physics_remove_test": {
        "title": "cl_physics_remove_test",
        "description": "remove test object",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_physics_report_active": {
        "title": "cl_physics_report_active",
        "description": "Lists all active physics objects",
        "args": " extra info",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_precacheinfo": {
        "title": "cl_precacheinfo",
        "description": "Show precache info (client).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "cl_pred_track": {
        "title": "cl_pred_track",
        "description": "<entindex> <fieldname>:  Track changes to entity index entindex, for field fieldname.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_pred_track_off": {
        "title": "cl_pred_track_off",
        "description": "clear field track changes.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_predictioncopy_describe": {
        "title": "cl_predictioncopy_describe",
        "description": "Describe datamap_t for entindex",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_predictioncopy_print": {
        "title": "cl_predictioncopy_print",
        "description": "Print simple description of prediction copy fields for entindex",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_printfps": {
        "title": "cl_printfps",
        "description": "Print information from cl_showfps.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_prop_debug": {
        "title": "cl_prop_debug",
        "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_querycache_stats": {
        "title": "cl_querycache_stats",
        "description": "Display status of the query cache (client only)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_reload_hud": {
        "title": "cl_reload_hud",
        "description": "Reloads the hud scale and resets scale and borders",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_removedecals": {
        "title": "cl_removedecals",
        "description": "Remove the decals from the entity under the crosshair.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_report_entities": {
        "title": "cl_report_entities",
        "description": "Lists all entities",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "cheat"
        ]
    },
    "cl_report_predcopy_overrides": {
        "title": "cl_report_predcopy_overrides",
        "description": "Report prediction copy overrides",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_report_simthinklist": {
        "title": "cl_report_simthinklist",
        "description": "Lists all simulating/thinking entities",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "cl_report_soundpatch": {
        "title": "cl_report_soundpatch",
        "description": "reports client-side sound patch count",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_resetfps": {
        "title": "cl_resetfps",
        "description": "Reset information from cl_showfps.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_rr_reloadresponsesystems": {
        "title": "cl_rr_reloadresponsesystems",
        "description": "Reload all response system scripts.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_save_animgraph_recording": {
        "title": "cl_save_animgraph_recording",
        "description": "Saves all active animgraph recordings to disk",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_add_debug_filter": {
        "title": "cl_script_add_debug_filter",
        "description": "Add a filter to the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_add_watch": {
        "title": "cl_script_add_watch",
        "description": "Add a watch to the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_add_watch_pattern": {
        "title": "cl_script_add_watch_pattern",
        "description": "Add a watch to the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_attach_debugger": {
        "title": "cl_script_attach_debugger",
        "description": "Connect the vscript VM to the script debugger",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_clear_watches": {
        "title": "cl_script_clear_watches",
        "description": "Clear all watches from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_debug": {
        "title": "cl_script_debug",
        "description": "Toggle the in-game script debug features",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_dump_all": {
        "title": "cl_script_dump_all",
        "description": "Dump the state of the VM to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_find": {
        "title": "cl_script_find",
        "description": "Find a key in the VM",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_help": {
        "title": "cl_script_help",
        "description": "Output help for script functions",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_help2": {
        "title": "cl_script_help2",
        "description": "Output help for script functions suitable for auto-completion",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_script_reload": {
        "title": "cl_script_reload",
        "description": "Reload scripts",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_reload_code": {
        "title": "cl_script_reload_code",
        "description": "Execute a vscript file, replacing existing functions with the functions in the run script",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_reload_entity_code": {
        "title": "cl_script_reload_entity_code",
        "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_remove_debug_filter": {
        "title": "cl_script_remove_debug_filter",
        "description": "Remove a filter from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_remove_watch": {
        "title": "cl_script_remove_watch",
        "description": "Remove a watch from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_remove_watch_pattern": {
        "title": "cl_script_remove_watch_pattern",
        "description": "Remove a watch from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_resurrect_unreachable": {
        "title": "cl_script_resurrect_unreachable",
        "description": "Use the garbage collector to track down reference cycles",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_trace_disable": {
        "title": "cl_script_trace_disable",
        "description": "Turn off a particular trace output by file or function name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_trace_disable_all": {
        "title": "cl_script_trace_disable_all",
        "description": "Turn off all trace output",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_trace_disable_key": {
        "title": "cl_script_trace_disable_key",
        "description": "Turn off a particular trace output by table/instance",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_trace_enable": {
        "title": "cl_script_trace_enable",
        "description": "Turn on a particular trace output by file or function name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_trace_enable_all": {
        "title": "cl_script_trace_enable_all",
        "description": "Turn on all trace output",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_script_trace_enable_key": {
        "title": "cl_script_trace_enable_key",
        "description": "Turn on a particular trace output by table/instance",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_showents": {
        "title": "cl_showents",
        "description": "Dump entity list to console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_sim_grenade_trajectory": {
        "title": "cl_sim_grenade_trajectory",
        "description": "Draw trajectory of the deployed grenade if thrown from this position. Takes an optional parameter for how long the drawn trajectory will last.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_sos_test_get_opvar": {
        "title": "cl_sos_test_get_opvar",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_sos_test_set_opvar": {
        "title": "cl_sos_test_set_opvar",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_soundscape_flush": {
        "title": "cl_soundscape_flush",
        "description": "Flushes the client side soundscapes",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "server_can_execute"
        ]
    },
    "cl_soundscape_printdebuginfo": {
        "title": "cl_soundscape_printdebuginfo",
        "description": "print soundscapes",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_spewserializers": {
        "title": "cl_spewserializers",
        "description": "Spew serializers",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "cl_spewworldgroups": {
        "title": "cl_spewworldgroups",
        "description": "Spew world groups (client)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "cl_ss_origin": {
        "title": "cl_ss_origin",
        "description": "print origin in script format",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_steamscreenshots": {
        "title": "cl_steamscreenshots",
        "description": "Enable/disable saving screenshots to Steam",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_test_list_entities": {
        "title": "cl_test_list_entities",
        "description": "test-list entities",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cl_ticktiming": {
        "title": "cl_ticktiming",
        "description": "{print|<interval>} [summary|detail]  Print timing stats now, or set report interval",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "cl_tree_sway_dir": {
        "title": "cl_tree_sway_dir",
        "description": "sets tree sway wind direction and strength",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cl_updatevisibility": {
        "title": "cl_updatevisibility",
        "description": "Updates visibility bits.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "clear": {
        "title": "clear",
        "description": "Clear console output.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "clear_bombs": {
        "title": "clear_bombs",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "clearall": {
        "title": "clearall",
        "description": "Clear console output from all views.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "cli_ent_attachments": {
        "title": "cli_ent_attachments",
        "description": "Displays the interpolated attachment points on an entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cli_ent_hitbox": {
        "title": "cli_ent_hitbox",
        "description": "Displays the skeleton for the given entity(ies).",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cli_ent_pivot": {
        "title": "cli_ent_pivot",
        "description": "Displays the interpolated pivot for the given entity(ies).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cli_ent_skeleton": {
        "title": "cli_ent_skeleton",
        "description": "Displays the skeleton for the given entity(ies).",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "cli_ent_vcollide_wireframe": {
        "title": "cli_ent_vcollide_wireframe",
        "description": "Displays the interpolated vcollide wireframe pm am entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "clutch_mode_toggle": {
        "title": "clutch_mode_toggle",
        "description": "Toggle clutch mode convar",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "cmd": {
        "title": "cmd",
        "description": "Forward command to server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "collect_entity_model_name": {
        "title": "collect_entity_model_name",
        "description": "Collect model names of the entities you're pointing at",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "commentary_cvarsnotchanging": {
        "title": "commentary_cvarsnotchanging",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "commentary_finishnode": {
        "title": "commentary_finishnode",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "condump": {
        "title": "condump",
        "description": "dump the text currently in the console to condumpXX.log",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "confirm_abandon_match": {
        "title": "confirm_abandon_match",
        "description": "Confirm that we wish to abandon match",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "confirm_activate_itemid_now": {
        "title": "confirm_activate_itemid_now",
        "description": "Confirm item activation by item id",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "confirm_join_friend_session_exit_current": {
        "title": "confirm_join_friend_session_exit_current",
        "description": "Confirm that we wish to join a friend session, destroying a previous session",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "confirm_join_new_session_exit_current": {
        "title": "confirm_join_new_session_exit_current",
        "description": "Confirm that we wish to join a new session, destroying a previous session",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "confirm_join_party_session_exit_current": {
        "title": "confirm_join_party_session_exit_current",
        "description": "Confirm that we wish to join a party session, destroying a previous session",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "confirm_watch_friend_session_exit_current": {
        "title": "confirm_watch_friend_session_exit_current",
        "description": "Confirm that we wish to watch a friend session, destroying a previous session",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "connect": {
        "title": "connect",
        "description": "Connect to a remote server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "connect_hltv": {
        "title": "connect_hltv",
        "description": "Connect to a remote HLTV server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "console_test": {
        "title": "console_test",
        "description": "Output text to test console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "consoletool": {
        "title": "consoletool",
        "description": "Open a VConsole subtool.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "convert_steamid": {
        "title": "convert_steamid",
        "description": "Convert SteamID into multiple formats",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "cpuinfo": {
        "title": "cpuinfo",
        "description": "Print CPU configuration information",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "crash": {
        "title": "crash",
        "description": "Crash the client. Optional parameter -- type of crash:",
        "args": " read from NULL",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "crash_error": {
        "title": "crash_error",
        "description": "Cause the engine to crash by Plat_FatalError on main thread (Debug!!)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "crash_error_job": {
        "title": "crash_error_job",
        "description": "Cause the engine to crash by Plat_FatalError on job thread (Debug!!)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "crash_error_thread": {
        "title": "crash_error_thread",
        "description": "Cause the engine to crash by Plat_FatalError on non-main thread (Debug!!)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "crash_job": {
        "title": "crash_job",
        "description": "Cause the engine to crash in a job thread (Debug!!)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "crash_thread": {
        "title": "crash_thread",
        "description": "Cause the engine to crash in a brand new non-main thread (Debug!!)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "create_flashlight": {
        "title": "create_flashlight",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "create_radius_damage": {
        "title": "create_radius_damage",
        "description": "Causes radius damage where you're looking, at the passed in radius.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "creditsdone": {
        "title": "creditsdone",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "cs_quit_prompt": {
        "title": "cs_quit_prompt",
        "description": "Quit the game",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "csgo_download_match": {
        "title": "csgo_download_match",
        "description": "Downloads a match via serial code and starts playback",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "dontrecord",
            "clientcmd_can_execute"
        ]
    },
    "csgo_econ_action_preview": {
        "title": "csgo_econ_action_preview",
        "description": "Preview an economy item",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "dontrecord",
            "clientcmd_can_execute"
        ]
    },
    "csgo_watch_friend_session_exit_current": {
        "title": "csgo_watch_friend_session_exit_current",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "cvarlist": {
        "title": "cvarlist",
        "description": "Show the list of convars/concommands.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "cyclevar": {
        "title": "cyclevar",
        "description": "Cycle through specified convar values.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "dbghist_addline": {
        "title": "dbghist_addline",
        "description": "Add a line to the debug history. Format: <category id> <line>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "dbghist_dump": {
        "title": "dbghist_dump",
        "description": "Dump the debug history to the console. Format: <category id>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "debug_purchase_defidx": {
        "title": "debug_purchase_defidx",
        "description": "Purchase an item by defindex",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release",
            "clientcmd_can_execute"
        ]
    },
    "debugoverlay_cycle_domain": {
        "title": "debugoverlay_cycle_domain",
        "description": "Toggles visibility of the debug overlay system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "debugoverlay_cycle_state": {
        "title": "debugoverlay_cycle_state",
        "description": "Toggles visibility of the debug overlay system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "debugoverlay_dashboard": {
        "title": "debugoverlay_dashboard",
        "description": "Makes the debug overlay dashboard visible.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "debugoverlay_hide_imgui": {
        "title": "debugoverlay_hide_imgui",
        "description": "Hides the overlay.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "debugoverlay_toggle": {
        "title": "debugoverlay_toggle",
        "description": "Toggles visibility of the debug overlay system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "demo_goto": {
        "title": "demo_goto",
        "description": "Skips to location in demo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_gotomark": {
        "title": "demo_gotomark",
        "description": "Skips the current demo playback to the marked tick",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_gototick": {
        "title": "demo_gototick",
        "description": "Skips to a tick in demo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_info": {
        "title": "demo_info",
        "description": "Print information about currently playing demo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_marktick": {
        "title": "demo_marktick",
        "description": "Marks the current demo playback tick for later use",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_pause": {
        "title": "demo_pause",
        "description": "Pauses demo playback.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_resume": {
        "title": "demo_resume",
        "description": "Resumes demo playback.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_timescale": {
        "title": "demo_timescale",
        "description": "Sets demo replay speed.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_togglepause": {
        "title": "demo_togglepause",
        "description": "Toggles demo playback.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demo_writemetafile": {
        "title": "demo_writemetafile",
        "description": "save current meta file demo_<version>.meta file for use in demo upconversion.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "demolist": {
        "title": "demolist",
        "description": "Print demo sequence list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "demoui": {
        "title": "demoui",
        "description": "Show/hide demo playback ui",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "destructible_parts_force_destroy": {
        "title": "destructible_parts_force_destroy",
        "description": "Force a destructible part to break",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "dev_send_gc_message": {
        "title": "dev_send_gc_message",
        "description": "<msgid> Send a blank body message with a given ID to gc for routing tests",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "dev_send_gc_message_server": {
        "title": "dev_send_gc_message_server",
        "description": "<msgid> Send a blank body message with a given ID to gc for routing tests",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "dev_simulate_gcdown": {
        "title": "dev_simulate_gcdown",
        "description": "<state> Turn on/off simulated GC communications failure (GC is down in a way that we know it is down)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "differences": {
        "title": "differences",
        "description": "Show all convars which are not at their default values (optional restricted to specific flags).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "disable_priority_boost": {
        "title": "disable_priority_boost",
        "description": "Disable focus based priority boost",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "disconnect": {
        "title": "disconnect",
        "description": "Disconnect from server",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "dlight_debug": {
        "title": "dlight_debug",
        "description": "Creates a dlight in front of the player",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "dm_reset_spawns": {
        "title": "dm_reset_spawns",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "dm_togglerandomweapons": {
        "title": "dm_togglerandomweapons",
        "description": "Turns random weapons in deathmatch on/off",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute",
            "clientcmd_can_execute"
        ]
    },
    "drawcross": {
        "title": "drawcross",
        "description": "Draws a cross at the given location",
        "args": " x y z",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "drawline": {
        "title": "drawline",
        "description": "Draws line between two 3D Points.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "drawoverviewmap": {
        "title": "drawoverviewmap",
        "description": "Draws the overview map",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "drawradar": {
        "title": "drawradar",
        "description": "Draws HUD radar",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "drop_hostage": {
        "title": "drop_hostage",
        "description": "drop held hostage",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "ds_workshop_changelevel": {
        "title": "ds_workshop_changelevel",
        "description": "Changelevel to an available workshop map by name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "ds_workshop_listmaps": {
        "title": "ds_workshop_listmaps",
        "description": "Dump workshop maps available on this server",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "dump_entity_report": {
        "title": "dump_entity_report",
        "description": "List all client-side entities in the scene",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "dump_globals": {
        "title": "dump_globals",
        "description": "Dump all global entities/states",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "dump_panorama_css_properties": {
        "title": "dump_panorama_css_properties",
        "description": "Prints out all valid panorama CSS properties and their documentation",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "dump_panorama_events": {
        "title": "dump_panorama_events",
        "description": "print panorama event types and their documentation",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "dump_panorama_render_command_stats": {
        "title": "dump_panorama_render_command_stats",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "dump_response_symbols": {
        "title": "dump_response_symbols",
        "description": "print all response symbols to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "dump_secondary_scene_worlds": {
        "title": "dump_secondary_scene_worlds",
        "description": "Lists secondary scene worlds and ref counts",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "dumpstringtable": {
        "title": "dumpstringtable",
        "description": "Usage:  dumpstringtable <tablename |all> <sv | cl> <verbose | simple> <element>      Print string tables to console, verbose to dump data, simple to show name and count only, can specifiy a single numeric element index to restrict spew.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "echo": {
        "title": "echo",
        "description": "Echo text to console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "server_can_execute"
        ]
    },
    "echoln": {
        "title": "echoln",
        "description": "Echo the command arguments on the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "econ_build_pinboard_images_from_collection_name": {
        "title": "econ_build_pinboard_images_from_collection_name",
        "description": "Renders and saves images for all models in a collection.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "econ_clear_inventory_images": {
        "title": "econ_clear_inventory_images",
        "description": "clear the local inventory images (they will regenerate)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "econ_show_items_with_tag": {
        "title": "econ_show_items_with_tag",
        "description": "Lists the item definitions that have a specified tag.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "enable_priority_boost": {
        "title": "enable_priority_boost",
        "description": "Disable focus based priority boost",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "endmatch_votenextmap": {
        "title": "endmatch_votenextmap",
        "description": "Votes for the next map at the end of the match",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "endmovie": {
        "title": "endmovie",
        "description": "Stop recording movie frames.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "endround": {
        "title": "endround",
        "description": "End the current round.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "engine_frametime_print_report": {
        "title": "engine_frametime_print_report",
        "description": "Print a performance report from the current data in the vprof 'lite' profiler",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "ent_absbox": {
        "title": "ent_absbox",
        "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_actornames": {
        "title": "ent_actornames",
        "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_animgraph_debug": {
        "title": "ent_animgraph_debug",
        "description": "Displays debug draws about the given entity(ies) animgraph",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_animgraph_record": {
        "title": "ent_animgraph_record",
        "description": "Toggles recording of animgraph replay of the given entity(s)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_animgraph_setvar": {
        "title": "ent_animgraph_setvar",
        "description": "Sets a variable on the animgraph of the given entity(s)",
        "args": "   <varname>=<value>\t<{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_attachments": {
        "title": "ent_attachments",
        "description": "Displays the attachment points on an entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_autoaim": {
        "title": "ent_autoaim",
        "description": "Displays the entity's autoaim radius.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_bbox": {
        "title": "ent_bbox",
        "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_call": {
        "title": "ent_call",
        "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_cancelpendingentfires": {
        "title": "ent_cancelpendingentfires",
        "description": "Cancels all ent_fire created outputs that are currently waiting for their delay to expire.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "ent_characterize": {
        "title": "ent_characterize",
        "description": "Spew PVS debug info for entity",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "ent_clear_debug_overlays": {
        "title": "ent_clear_debug_overlays",
        "description": "Clears all debug overlays",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_create": {
        "title": "ent_create",
        "description": "Creates an entity of the given designer or subclass name where the player is looking.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "ent_debug_anim": {
        "title": "ent_debug_anim",
        "description": "Use the specified entity for animation debugging.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "ent_debug_origin_changes": {
        "title": "ent_debug_origin_changes",
        "description": "turn on, off, or toggle origin changes on server for entity by index",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "ent_find": {
        "title": "ent_find",
        "description": "Find and list all entities with classnames or targetnames that contain the specified substrings.",
        "args": " find_ent <substring>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_find_index": {
        "title": "ent_find_index",
        "description": "Display data for entity matching specified index.",
        "args": " find_ent_index <index>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_fire": {
        "title": "ent_fire",
        "description": "Usage:",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "ent_fire_output": {
        "title": "ent_fire_output",
        "description": "Usage:",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "ent_grab": {
        "title": "ent_grab",
        "description": "grabs the object in front of the player. Options: -loose -multiple -toggle",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_hierarchy": {
        "title": "ent_hierarchy",
        "description": "Prints the entity hierarchy tree rooted at the specified ent(s)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_hitbox": {
        "title": "ent_hitbox",
        "description": "Displays the hitboxes for the given entity(ies).",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_info": {
        "title": "ent_info",
        "description": "Usage:",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_joints": {
        "title": "ent_joints",
        "description": "Displays the joint names + axes an entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_kill": {
        "title": "ent_kill",
        "description": "Kills the given entity(s)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_list_report": {
        "title": "ent_list_report",
        "description": "Reports all list of all entities in a map, one by one",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "ent_messages": {
        "title": "ent_messages",
        "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_name": {
        "title": "ent_name",
        "description": "Displays the entity name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_orient": {
        "title": "ent_orient",
        "description": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.",
        "args": " ent_orient <entity name> <optional",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_picker": {
        "title": "ent_picker",
        "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.",
        "args": "\tfull - enables all debug information",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_pivot": {
        "title": "ent_pivot",
        "description": "Displays the pivot for the given entity(ies).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_rbox": {
        "title": "ent_rbox",
        "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "ent_remove": {
        "title": "ent_remove",
        "description": "Removes the given entity(s)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_remove_all": {
        "title": "ent_remove_all",
        "description": "Removes all entities of the specified type",
        "args": "   \t{entity_name} / {class_name} ",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_rotate": {
        "title": "ent_rotate",
        "description": "Rotates an entity by a specified # of degrees",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_scale": {
        "title": "ent_scale",
        "description": "Scales entities.\tArguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_scenehierarchy": {
        "title": "ent_scenehierarchy",
        "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_script_dump": {
        "title": "ent_script_dump",
        "description": "Dumps the names and values of this entity's script scope to the console",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_select": {
        "title": "ent_select",
        "description": "Select or deselects the given entities(s) for later manipulation",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_setang": {
        "title": "ent_setang",
        "description": "Set entity angles",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "ent_setname": {
        "title": "ent_setname",
        "description": "Sets the targetname of the given entity(s)",
        "args": "   \t<new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_setpos": {
        "title": "ent_setpos",
        "description": "Move entity to position",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "ent_show_damage": {
        "title": "ent_show_damage",
        "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_show_response_criteria": {
        "title": "ent_show_response_criteria",
        "description": "Print, to the console, an entity's current criteria set used to select responses.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_skeleton": {
        "title": "ent_skeleton",
        "description": "Displays the skeleton for the given entity(ies).",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_spew_derived_classes": {
        "title": "ent_spew_derived_classes",
        "description": "Prints out all entity classes which inherit from a specified base class",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "ent_teleport": {
        "title": "ent_teleport",
        "description": "Teleport the specified entity to where the player is looking.",
        "args": " ent_teleport <entity name>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text": {
        "title": "ent_text",
        "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "ent_text256": {
        "title": "ent_text256",
        "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text_clear": {
        "title": "ent_text_clear",
        "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text_filter": {
        "title": "ent_text_filter",
        "description": "Set which ent_text filters you want:",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text_radius": {
        "title": "ent_text_radius",
        "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)",
        "args": "   \t<Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text_sticky_add": {
        "title": "ent_text_sticky_add",
        "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text_sticky_clear": {
        "title": "ent_text_sticky_clear",
        "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text_sticky_dump": {
        "title": "ent_text_sticky_dump",
        "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_text_sticky_remove": {
        "title": "ent_text_sticky_remove",
        "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_ungrab": {
        "title": "ent_ungrab",
        "description": "un-grabs all objects",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_vcollide_wireframe": {
        "title": "ent_vcollide_wireframe",
        "description": "Displays the interpolated vcollide wireframe pm am entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_viewentity": {
        "title": "ent_viewentity",
        "description": "Selects the picked entity as the view entity",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "ent_viewoffset": {
        "title": "ent_viewoffset",
        "description": "Displays the eye position for the given entity(ies) in red.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ent_viewpunch": {
        "title": "ent_viewpunch",
        "description": "Used to debug ViewPunch",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "ent_visibility_traces": {
        "title": "ent_visibility_traces",
        "description": "Displays visibility traces for the given entity",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "entity_lump_list": {
        "title": "entity_lump_list",
        "description": "List all known entity lumps",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "entity_lump_spew": {
        "title": "entity_lump_spew",
        "description": "Dump the contents of an entity lump",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "ents": {
        "title": "ents",
        "description": "List server entities, sorted by spawn group",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "error_message_explain_pure": {
        "title": "error_message_explain_pure",
        "description": "Take user to Steam support article",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "error_message_explain_unsigned": {
        "title": "error_message_explain_unsigned",
        "description": "Take user to Steam support article",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "error_message_explain_vac": {
        "title": "error_message_explain_vac",
        "description": "Take user to Steam support article",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "escape": {
        "title": "escape",
        "description": "Escape key pressed.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release",
            "clientcmd_can_execute"
        ]
    },
    "exec": {
        "title": "exec",
        "description": "Execute a cfg file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "exec_async": {
        "title": "exec_async",
        "description": "Execute a cfg file over time",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat",
            "dontrecord"
        ]
    },
    "execifexists": {
        "title": "execifexists",
        "description": "Execute a cfg file if file exists",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "explode": {
        "title": "explode",
        "description": "Kills the player with explosive damage",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "explodevector": {
        "title": "explodevector",
        "description": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "fadein": {
        "title": "fadein",
        "description": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "fadeout": {
        "title": "fadeout",
        "description": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "find": {
        "title": "find",
        "description": "Find concommands with the specified string in their name/help text.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "findflags": {
        "title": "findflags",
        "description": "Find concommands by flags.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "firetarget": {
        "title": "firetarget",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "firstperson": {
        "title": "firstperson",
        "description": "Switch to firstperson camera.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release",
            "execute_per_tick"
        ]
    },
    "fog_override_color": {
        "title": "fog_override_color",
        "description": "Sets the fog color override",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "force_assert": {
        "title": "force_assert",
        "description": "Fire an assertion failure",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "force_fatal_error": {
        "title": "force_fatal_error",
        "description": "Fire a fatal error",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "force_hibernate": {
        "title": "force_hibernate",
        "description": "Force toggle hibernation state",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "fs_clear_open_duplicate_times": {
        "title": "fs_clear_open_duplicate_times",
        "description": "Clear the list of files that have been opened.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "fs_dump_open_duplicate_times": {
        "title": "fs_dump_open_duplicate_times",
        "description": "Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was spent reading from them.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "game_alias": {
        "title": "game_alias",
        "description": "Set the configuration of game type and mode based on game alias like \"deathmatch\".",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "game_particle_manager_dump_requeue": {
        "title": "game_particle_manager_dump_requeue",
        "description": "Dump contents of particle manager requeue",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "game_particle_manager_list_active": {
        "title": "game_particle_manager_list_active",
        "description": "Dump counts of active particles",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "gameevents_analyze": {
        "title": "gameevents_analyze",
        "description": "compare game events across all mods",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "gameevents_dumptofile": {
        "title": "gameevents_dumptofile",
        "description": "write gameevents keyvalues (sorted by name) to gameevents_<modname>.txt",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "gameinstructor_dump_open_lessons": {
        "title": "gameinstructor_dump_open_lessons",
        "description": "Gives a list of all currently open lessons.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "gameinstructor_dump_run_lesson_counts": {
        "title": "gameinstructor_dump_run_lesson_counts",
        "description": "Gives a list of lessons that been completed or shown",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "gameinstructor_reload_lessons": {
        "title": "gameinstructor_reload_lessons",
        "description": "Shuts down all open lessons and reloads them from the script file.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "gameinstructor_reset_counts": {
        "title": "gameinstructor_reset_counts",
        "description": "Resets all display and success counts to zero.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "gameinstructor_teach_lesson": {
        "title": "gameinstructor_teach_lesson",
        "description": "Force a specific lesson to be triggered",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "gameui_activate": {
        "title": "gameui_activate",
        "description": "Shows the game UI",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hidden",
            "release"
        ]
    },
    "gameui_allowescape": {
        "title": "gameui_allowescape",
        "description": "Escape key allowed to hide game UI",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hidden",
            "release"
        ]
    },
    "gameui_allowescapetoshow": {
        "title": "gameui_allowescapetoshow",
        "description": "Escape key allowed to show game UI",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hidden",
            "release"
        ]
    },
    "gameui_hide": {
        "title": "gameui_hide",
        "description": "Hides the game UI",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "gameui_preventescape": {
        "title": "gameui_preventescape",
        "description": "Escape key doesn't hide game UI",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hidden",
            "release"
        ]
    },
    "gameui_preventescapetoshow": {
        "title": "gameui_preventescapetoshow",
        "description": "Escape key doesn't show game UI",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hidden",
            "release"
        ]
    },
    "gcmd": {
        "title": "gcmd",
        "description": "Generate a command",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "generate_minidump_comment": {
        "title": "generate_minidump_comment",
        "description": "Generate a minidump comment and spew the results to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "generate_null_container": {
        "title": "generate_null_container",
        "description": "Generated a nulled out container.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "generate_trash_synth": {
        "title": "generate_trash_synth",
        "description": "Args: [Asset directory Path]",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "getpos": {
        "title": "getpos",
        "description": "dump position and angles to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "getpos_exact": {
        "title": "getpos_exact",
        "description": "dump origin and angles to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "give": {
        "title": "give",
        "description": "Give item to player.",
        "args": " <item_name>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "vconsole_fuzzy_matching",
            "client_can_execute"
        ]
    },
    "give_oriented": {
        "title": "give_oriented",
        "description": "Give item oriented to player angles.",
        "args": " <item_name>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "vconsole_fuzzy_matching",
            "client_can_execute"
        ]
    },
    "givecurrentammo": {
        "title": "givecurrentammo",
        "description": "Give a supply of ammo for current weapon..",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "global_set": {
        "title": "global_set",
        "description": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "god": {
        "title": "god",
        "description": "Toggle by default, or 0 to disable and 1 to enable. Player becomes invulnerable.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "graphcontroller_dumpparams": {
        "title": "graphcontroller_dumpparams",
        "description": "Print all anim graph parameters for the specified entity.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "grep": {
        "title": "grep",
        "description": "grep line for pattern, print out matching lines only",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "groundlist": {
        "title": "groundlist",
        "description": "Display ground entity list <index>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "help": {
        "title": "help",
        "description": "Find help about a convar/concommand.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "hideconsole": {
        "title": "hideconsole",
        "description": "Hide the console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "hideoverviewmap": {
        "title": "hideoverviewmap",
        "description": "Hides the overview map",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "hideradar": {
        "title": "hideradar",
        "description": "Hides HUD radar",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "host_timescale_dec": {
        "title": "host_timescale_dec",
        "description": "Decrement the timescale by one step",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "host_timescale_inc": {
        "title": "host_timescale_inc",
        "description": "Increment the timescale by one step",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "host_workshop_collection": {
        "title": "host_workshop_collection",
        "description": "Host a workshop map collection as a mapgroup",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "host_workshop_map": {
        "title": "host_workshop_map",
        "description": "Get the latest version of the map and host it on this server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "host_writeconfig": {
        "title": "host_writeconfig",
        "description": "Saves out the user config values.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "hud_reloadscheme": {
        "title": "hud_reloadscheme",
        "description": "Reloads hud layout and animation scripts.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "hurtme": {
        "title": "hurtme",
        "description": "Hurts the player.",
        "args": " <health to lose>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "ic": {
        "title": "ic",
        "description": "interp entity count",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "ik_debug_fabrik_backwards_iteration_toggle": {
        "title": "ik_debug_fabrik_backwards_iteration_toggle",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "ik_debug_fabrik_forwards_iteration_toggle": {
        "title": "ik_debug_fabrik_forwards_iteration_toggle",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "imgui_cycle_undocked_window_focus": {
        "title": "imgui_cycle_undocked_window_focus",
        "description": "Cycles focus between the game window and undocked imgui windows",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "imgui_debug_entity": {
        "title": "imgui_debug_entity",
        "description": "Shows the entity browswer, focused on the entity you specify.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "imgui_set_selection": {
        "title": "imgui_set_selection",
        "description": "Sets ImGui selection",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "imgui_set_status_text": {
        "title": "imgui_set_status_text",
        "description": "Sets ImGui header status text",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "import_csgo_config": {
        "title": "import_csgo_config",
        "description": "Imports an existing CS:GO configuration file into CS2",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "impulse": {
        "title": "impulse",
        "description": "Triggers impulse command",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "in_forcebuttonstate": {
        "title": "in_forcebuttonstate",
        "description": "Forces a button to be a particular state - WHEN PROCESSING USERCOMMANDS",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "vconsole_fuzzy_matching"
        ]
    },
    "in_forceinput": {
        "title": "in_forceinput",
        "description": "Forces a button to be a particular state -- WHEN SAMPLING INPUT",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "vconsole_fuzzy_matching"
        ]
    },
    "incrementvar": {
        "title": "incrementvar",
        "description": "Increment specified convar value.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "input_state": {
        "title": "input_state",
        "description": "input_state",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "instant_replay_goto_tick": {
        "title": "instant_replay_goto_tick",
        "description": "Goto a direct timestamp of the replay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_goto_tick_relative": {
        "title": "instant_replay_goto_tick_relative",
        "description": "Goto a direct timestamp of the replay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_live": {
        "title": "instant_replay_live",
        "description": "If in replay, jumps back to live",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_pause": {
        "title": "instant_replay_pause",
        "description": "Pauses instant replay.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_resume": {
        "title": "instant_replay_resume",
        "description": "Resumes instant replay.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_skip": {
        "title": "instant_replay_skip",
        "description": "Number of seconds to skip back to instant replay from current position",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_skip_live": {
        "title": "instant_replay_skip_live",
        "description": "Number of seconds to skip back to instant replay from live",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_timescale": {
        "title": "instant_replay_timescale",
        "description": "Sets instant replay speed.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "instant_replay_togglepause": {
        "title": "instant_replay_togglepause",
        "description": "Toggles instant replay.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "invnext": {
        "title": "invnext",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "invnextselect": {
        "title": "invnextselect",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "invprev": {
        "title": "invprev",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "invprevselect": {
        "title": "invprevselect",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "iv_debug": {
        "title": "iv_debug",
        "description": "Spew interpolated var info for entity.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "iv_interp": {
        "title": "iv_interp",
        "description": "Spew interpolated var info for entity.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "iv_off": {
        "title": "iv_off",
        "description": "Turn off all interpolation variable spew.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "iv_on": {
        "title": "iv_on",
        "description": "Spew both interpolated var debug info and history for entity.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "jpeg_screenshot": {
        "title": "jpeg_screenshot",
        "description": "Take a jpeg screenshot: jpeg_screenshot [filename] [quality 1-100].",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "key_findbinding": {
        "title": "key_findbinding",
        "description": "Find key bound to specified command string.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "key_listboundkeys": {
        "title": "key_listboundkeys",
        "description": "List bound keys with bindings.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "kick": {
        "title": "kick",
        "description": "Kick a player by name.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "kickid": {
        "title": "kickid",
        "description": "Kick a player by userid or uniqueid, with a message.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "kickid_hltv": {
        "title": "kickid_hltv",
        "description": "Kick a player by userid or uniqueid, with a message.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "kill": {
        "title": "kill",
        "description": "Kills the player with generic damage",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "killvector": {
        "title": "killvector",
        "description": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "lastinv": {
        "title": "lastinv",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "launch_warmup_map": {
        "title": "launch_warmup_map",
        "description": "Launches warmup map",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "dontrecord",
            "clientcmd_can_execute"
        ]
    },
    "listrecentnpcspeech": {
        "title": "listRecentNPCSpeech",
        "description": "Displays a list of the last 5 lines of speech from NPCs.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "dontrecord",
            "defensive"
        ]
    },
    "listdemo": {
        "title": "listdemo",
        "description": "List demo file contents.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "listid": {
        "title": "listid",
        "description": "Lists banned users.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "listip": {
        "title": "listip",
        "description": "List IP addresses on the ban list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "listissues": {
        "title": "listissues",
        "description": "List all the issues that can be voted on.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "load": {
        "title": "load",
        "description": "Usage:",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "vconsole_fuzzy_matching",
            "defensive"
        ]
    },
    "localization_quest_item_string_printout": {
        "title": "localization_quest_item_string_printout",
        "description": "localization_quest_item_string_printout",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "log": {
        "title": "log",
        "description": "Enables logging to file, console, and udp < on | off >.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "log_color": {
        "title": "log_color",
        "description": "Set the color of a logging channel.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "log_dumpchannels": {
        "title": "log_dumpchannels",
        "description": "Dumps information about all logging channels.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "log_flags": {
        "title": "log_flags",
        "description": "Set the flags on a logging channel.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "log_level": {
        "title": "log_level",
        "description": "Set the spew level of a logging channel.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "log_verbosity": {
        "title": "log_verbosity",
        "description": "Set the verbosity of a logging channel.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "logaddress_add_http": {
        "title": "logaddress_add_http",
        "description": "Set URI of a listener to receive logs via http post. Wrap URI in double quotes.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "unlogged",
            "release"
        ]
    },
    "logaddress_add_http_delayed": {
        "title": "logaddress_add_http_delayed",
        "description": "Set a delay and URI of a listener to receive logs via http post. Wrap URI in double quotes.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "unlogged",
            "release"
        ]
    },
    "logaddress_del_http": {
        "title": "logaddress_del_http",
        "description": "Remove http listener by URI. Wrap URI in double quotes.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "unlogged",
            "release"
        ]
    },
    "logaddress_delall_http": {
        "title": "logaddress_delall_http",
        "description": "Remove all http listeners from the dispatch list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "unlogged",
            "release"
        ]
    },
    "logaddress_list_http": {
        "title": "logaddress_list_http",
        "description": "List all URIs currently receiving server logs",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "unlogged",
            "release"
        ]
    },
    "loop_dump": {
        "title": "loop_dump",
        "description": "Print the listeners of the current loop mode",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "lrucache_flush": {
        "title": "lrucache_flush",
        "description": "Flushes the specified cache",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "lrucache_reset_stats": {
        "title": "lrucache_reset_stats",
        "description": "Resets stats for the specified CUtlLRUCaches (or all if none specified)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "lrucache_set_size": {
        "title": "lrucache_set_size",
        "description": "Sets the specified cache to the specified size",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "lrucache_stats": {
        "title": "lrucache_stats",
        "description": "Spews information about all CUtlLRUCaches",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "malloc_stats_dump": {
        "title": "malloc_stats_dump",
        "description": "Dump malloc stats to stderr.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "map": {
        "title": "map",
        "description": "map <mapname> :Load a new map.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release",
            "vconsole_fuzzy_matching",
            "vconsole_set_focus"
        ]
    },
    "map_enable_portrait_worlds": {
        "title": "map_enable_portrait_worlds",
        "description": "Enables/disables portrait worlds",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "map_setbombradius": {
        "title": "map_setbombradius",
        "description": "Sets the bomb radius for the map.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "map_showbombradius": {
        "title": "map_showbombradius",
        "description": "Shows bomb radius from the center of each bomb site and planted bomb.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "map_showspawnpoints": {
        "title": "map_showspawnpoints",
        "description": "Shows player spawn points (red=invalid). Optionally pass in the duration.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "map_workshop": {
        "title": "map_workshop",
        "description": "Launch a workshop map",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release",
            "vconsole_fuzzy_matching",
            "vconsole_set_focus"
        ]
    },
    "mapgroup": {
        "title": "mapgroup",
        "description": "Specify a map group",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "dontrecord",
            "release"
        ]
    },
    "maps": {
        "title": "maps",
        "description": "Displays list of maps.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "markup_group_ent_bbox": {
        "title": "markup_group_ent_bbox",
        "description": "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "markup_group_ent_text": {
        "title": "markup_group_ent_text",
        "description": "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "markup_group_spew": {
        "title": "markup_group_spew",
        "description": "Spew all current markup groups and their members",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "mat_assert_on_shader_use": {
        "title": "mat_assert_on_shader_use",
        "description": "Assert on shader used based on substring of shader name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "mat_clearshadercache": {
        "title": "mat_clearshadercache",
        "description": "Clears the shader cache used for dynamic shader compile.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_debug": {
        "title": "mat_debug",
        "description": "Sets a mat_fullbright debug visualization mode",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "mat_disable_dynamic_shader_compile": {
        "title": "mat_disable_dynamic_shader_compile",
        "description": "Reloads all shaders from vcs files until the next time mat_reloadshaders is called",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_forcereloadshaders": {
        "title": "mat_forcereloadshaders",
        "description": "Force reloads all shaders (skips MD5 check). Takes optional substrings of shader names to recompile as arguments.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_dead_materials": {
        "title": "mat_print_dead_materials",
        "description": "Print loaded materials that have no valid layers due to not supporting any of the modes in gameinfo.gi.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_error_materials": {
        "title": "mat_print_error_materials",
        "description": "Print loaded materials that are using the error shader or material.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_expensive_materials": {
        "title": "mat_print_expensive_materials",
        "description": "Print materials sorted by cost heuristic",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_material_info": {
        "title": "mat_print_material_info",
        "description": "Print info about a specific material",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_materials": {
        "title": "mat_print_materials",
        "description": "Print loaded materials. Takes an optional substring as an argument.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_materials_last_frame": {
        "title": "mat_print_materials_last_frame",
        "description": "Print materials used last frame",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_materials_unused": {
        "title": "mat_print_materials_unused",
        "description": "Print materials that have never been used",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_modes": {
        "title": "mat_print_modes",
        "description": "Print supported rendering modes.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_shader_info": {
        "title": "mat_print_shader_info",
        "description": "Print detailed info about a single shader. Takes a shader name (hero.vfx) as an argument.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_shader_quality": {
        "title": "mat_print_shader_quality",
        "description": "Print current shader quality setting",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_shaders": {
        "title": "mat_print_shaders",
        "description": "Print loaded shaders. Takes a substring as an argument.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_textures": {
        "title": "mat_print_textures",
        "description": "Print loaded textures in alphabetical order. Takes an optional substring as an argument.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_textures_size": {
        "title": "mat_print_textures_size",
        "description": "Print loaded textures in ascending size order. Takes an optional substring as an argument.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_print_textures_size_in_memory": {
        "title": "mat_print_textures_size_in_memory",
        "description": "Print loaded textures in ascending size order as they are in memory. Takes an optional substring as an argument.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_reinitmaterials": {
        "title": "mat_reinitmaterials",
        "description": "Reinitializes all loaded materials, reloading their shaders.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_reloadmaterials": {
        "title": "mat_reloadmaterials",
        "description": "Reloads all materials. Takes an optional substring as an argument.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_reloadshaders": {
        "title": "mat_reloadshaders",
        "description": "Reloads all shaders. Takes optional substrings of shader names to recompile as arguments.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_reset_material_costs": {
        "title": "mat_reset_material_costs",
        "description": "Reset material cost heuristic",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mat_set_shader_quality": {
        "title": "mat_set_shader_quality",
        "description": "Force shader quality setting (valid values are 0 or 1)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "matchdraft_debug_sendlog": {
        "title": "matchdraft_debug_sendlog",
        "description": "Print debug draft into HTTP log",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "dontrecord",
            "release",
            "clientcmd_can_execute"
        ]
    },
    "mem_compact": {
        "title": "mem_compact",
        "description": "Compacts the heap",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mem_dump": {
        "title": "mem_dump",
        "description": "Dump memory stats to text file or <stdout>.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mem_test": {
        "title": "mem_test",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "memory": {
        "title": "memory",
        "description": "Print memory stats.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "memory_check_limit": {
        "title": "memory_check_limit",
        "description": "Assert if peak memory use is over the limit.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "menuselect": {
        "title": "menuselect",
        "description": "menuselect",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "minimap_create": {
        "title": "minimap_create",
        "description": "Does a bunch of work to create a minimap",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "mm_datacenter_debugprint": {
        "title": "mm_datacenter_debugprint",
        "description": "Shows information retrieved from data center",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mm_debugprint": {
        "title": "mm_debugprint",
        "description": "Show debug information about current matchmaking session",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mm_ignored_sessions_reset": {
        "title": "mm_ignored_sessions_reset",
        "description": "Reset ignored sessions",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "mm_queue_draft_show": {
        "title": "mm_queue_draft_show",
        "description": "Display current draft",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "mm_queue_show_stats": {
        "title": "mm_queue_show_stats",
        "description": "Display global server stats",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "model_dump_convert_info": {
        "title": "model_dump_convert_info",
        "description": "Print model load-time conversion info",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "gamedll",
            "clientdll",
            "defensive"
        ]
    },
    "movie_fixwave": {
        "title": "movie_fixwave",
        "description": "Fixup corrupted .wav file if engine crashed during startmovie/endmovie, etc.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "mp_backup_restore_list_files": {
        "title": "mp_backup_restore_list_files",
        "description": "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_backup_restore_load_file": {
        "title": "mp_backup_restore_load_file",
        "description": "Loads player cash, KDA, scores and team scores; resets to the next round after the backup",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_bot_ai_bt_clear_cache": {
        "title": "mp_bot_ai_bt_clear_cache",
        "description": "Clears the cache for behavior tree files.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_debug_timeouts": {
        "title": "mp_debug_timeouts",
        "description": "Prints time outs to the console for debugging",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "mp_disable_autokick": {
        "title": "mp_disable_autokick",
        "description": "Prevents a userid from being auto-kicked",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_dump_timers": {
        "title": "mp_dump_timers",
        "description": "Prints round timers to the console for debugging",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "mp_modify_timeouts": {
        "title": "mp_modify_timeouts",
        "description": "mp_modify_timeouts <CT|T> <N>, e.g., mp_modify ct -1",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_pause_match": {
        "title": "mp_pause_match",
        "description": "Pause the match in the next freeze time",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_scrambleteams": {
        "title": "mp_scrambleteams",
        "description": "Scramble the teams and restart the game",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_swapteams": {
        "title": "mp_swapteams",
        "description": "Swap the teams and restart the game",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_unpause_match": {
        "title": "mp_unpause_match",
        "description": "Resume the match",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_warmup_end": {
        "title": "mp_warmup_end",
        "description": "End warmup immediately.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "mp_warmup_start": {
        "title": "mp_warmup_start",
        "description": "Start warmup.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "multvar": {
        "title": "multvar",
        "description": "Multiply specified convar value.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "nav_add_to_selected_set": {
        "title": "nav_add_to_selected_set",
        "description": "Add current area to the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_add_to_selected_set_by_id": {
        "title": "nav_add_to_selected_set_by_id",
        "description": "Add specified area id to the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_avoid": {
        "title": "nav_avoid",
        "description": "Toggles the 'avoid this area when possible' flag used by the AI system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_begin_deselecting": {
        "title": "nav_begin_deselecting",
        "description": "Start continuously removing from the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_begin_drag_deselecting": {
        "title": "nav_begin_drag_deselecting",
        "description": "Start dragging a selection area.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_begin_drag_selecting": {
        "title": "nav_begin_drag_selecting",
        "description": "Start dragging a selection area.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_begin_selecting": {
        "title": "nav_begin_selecting",
        "description": "Start continuously adding to the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_check_connectivity": {
        "title": "nav_check_connectivity",
        "description": "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_clear_attribute": {
        "title": "nav_clear_attribute",
        "description": "Remove given nav attribute from all areas in the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_clear_attributes": {
        "title": "nav_clear_attributes",
        "description": "Clear all nav attributes of selected area.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_clear_selected_set": {
        "title": "nav_clear_selected_set",
        "description": "Clear the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_create_indirect_connection": {
        "title": "nav_create_indirect_connection",
        "description": "Create a connection between the selected area and the area pointed at by the crosshair.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_delete": {
        "title": "nav_delete",
        "description": "Deletes the currently highlighted Area.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_delete_all_hull": {
        "title": "nav_delete_all_hull",
        "description": "Deletes all areas with given hull category.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_delete_marked": {
        "title": "nav_delete_marked",
        "description": "Deletes the currently marked Area (if any).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_disconnect": {
        "title": "nav_disconnect",
        "description": "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_end_deselecting": {
        "title": "nav_end_deselecting",
        "description": "Stop continuously removing from the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_end_drag_deselecting": {
        "title": "nav_end_drag_deselecting",
        "description": "Stop dragging a selection area.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_end_drag_selecting": {
        "title": "nav_end_drag_selecting",
        "description": "Stop dragging a selection area.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_end_selecting": {
        "title": "nav_end_selecting",
        "description": "Stop continuously adding to the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_lower_drag_volume_max": {
        "title": "nav_lower_drag_volume_max",
        "description": "Lower the top of the drag select volume.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_lower_drag_volume_min": {
        "title": "nav_lower_drag_volume_min",
        "description": "Lower the bottom of the drag select volume.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_mark": {
        "title": "nav_mark",
        "description": "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_mark_attribute": {
        "title": "nav_mark_attribute",
        "description": "Set nav attribute for all areas in the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_precise": {
        "title": "nav_precise",
        "description": "Toggles the 'dont avoid obstacles' flag used by the AI system.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_raise_drag_volume_max": {
        "title": "nav_raise_drag_volume_max",
        "description": "Raise the top of the drag select volume.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_raise_drag_volume_min": {
        "title": "nav_raise_drag_volume_min",
        "description": "Raise the bottom of the drag select volume.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_recall_selected_set": {
        "title": "nav_recall_selected_set",
        "description": "Re-selects the stored selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_remove_from_selected_set": {
        "title": "nav_remove_from_selected_set",
        "description": "Remove current area from the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_select_radius": {
        "title": "nav_select_radius",
        "description": "Adds all areas in a radius to the selection set",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_select_with_attribute": {
        "title": "nav_select_with_attribute",
        "description": "Selects areas with the given attribute.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_split": {
        "title": "nav_split",
        "description": "To split an Area into two, align the split line using your cursor and invoke the split command.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_store_selected_set": {
        "title": "nav_store_selected_set",
        "description": "Stores the current selected set for later retrieval.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_switch": {
        "title": "nav_switch",
        "description": "Switches to navmesh for the specified spawngroup",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "nav_test_level_hull": {
        "title": "nav_test_level_hull",
        "description": "Find entities that intrude into the nav mesh.  List those entities in console output, and display bounding boxes around them for a while.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_test_level_hull_move": {
        "title": "nav_test_level_hull_move",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_toggle_deselecting": {
        "title": "nav_toggle_deselecting",
        "description": "Start or stop continuously removing from the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_toggle_in_selected_set": {
        "title": "nav_toggle_in_selected_set",
        "description": "Remove current area from the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_toggle_selected_set": {
        "title": "nav_toggle_selected_set",
        "description": "Toggles all areas into/out of the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_toggle_selecting": {
        "title": "nav_toggle_selecting",
        "description": "Start or stop continuously adding to the selected set.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "nav_unmark": {
        "title": "nav_unmark",
        "description": "Clears the marked Area or Ladder.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "net_reloadgameevents": {
        "title": "net_reloadgameevents",
        "description": "Reload the game events",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "net_stats_json": {
        "title": "net_stats_json",
        "description": "Output server networking statistics in json format",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "nextdemo": {
        "title": "nextdemo",
        "description": "Play next demo in sequence.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "noclip": {
        "title": "noclip",
        "description": "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "notarget": {
        "title": "notarget",
        "description": "Toggle. Player becomes hidden to NPCs.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "open_asset": {
        "title": "open_asset",
        "description": "Opens an asset in it's primary editor of choice. Specify the full path to the asset from the mod directory.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "p2p_listpeers": {
        "title": "p2p_listpeers",
        "description": "List currently known peers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "p2p_ping": {
        "title": "p2p_ping",
        "description": "Ping a peer.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "panorama_dispatch_event": {
        "title": "panorama_dispatch_event",
        "description": "Dispatch the event defined by the argument string. No creating panel is specified.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "panorama_dump_symbols": {
        "title": "panorama_dump_symbols",
        "description": "<ESymbolType> Dump all of the symbols in the Panorama symbol table",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "panorama_generate_layout_xsd": {
        "title": "panorama_generate_layout_xsd",
        "description": "Generate the Layout XML Schema Definition for the current run-time (types are dependent on which game DLL is running).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "panorama_print_cache_status": {
        "title": "panorama_print_cache_status",
        "description": "Print internal panorama refcounts for every file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "panorama_print_svg_stats": {
        "title": "panorama_print_svg_stats",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "particle_test_create": {
        "title": "particle_test_create",
        "description": "Creates the named particle system where the player is looking.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "particle_test_destroy": {
        "title": "particle_test_destroy",
        "description": "Destroys all particle systems matching the specified name.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "particle_test_start": {
        "title": "particle_test_start",
        "description": "Dispatches the test particle system with the parameters specified in particle_test_file,",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "particle_test_stop": {
        "title": "particle_test_stop",
        "description": "Stops all particle systems on the selected entities.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "path": {
        "title": "path",
        "description": "Show the filesystem path.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "pause": {
        "title": "pause",
        "description": "Toggle the server pause state.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "perfectworld_replenish_funds": {
        "title": "perfectworld_replenish_funds",
        "description": "Opens Perfect World funds replenishment page for account.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "phys_create_test_character_proxy": {
        "title": "phys_create_test_character_proxy",
        "description": "Create test character proxy",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_debug_draw": {
        "title": "phys_debug_draw",
        "description": "Set up debug-draw of physics internal state",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "phys_dump_intersection_controller": {
        "title": "phys_dump_intersection_controller",
        "description": "Dump intersection controller status",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_dump_main_world": {
        "title": "phys_dump_main_world",
        "description": "Dump physics main world to file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_dump_memory": {
        "title": "phys_dump_memory",
        "description": "Dump memory usage",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_list": {
        "title": "phys_list",
        "description": "List all physics component contents of every entity in the game;",
        "args": " initiate|terminate streaming to physics debugger",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_mark_debug": {
        "title": "phys_mark_debug",
        "description": "Mark object for debug",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "phys_record_rays": {
        "title": "phys_record_rays",
        "description": "Dump physics main world to file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_record_rays_and_world": {
        "title": "phys_record_rays_and_world",
        "description": "Dump traces physics main world to file",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_shoot": {
        "title": "phys_shoot",
        "description": "Shoots a phys object.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "phys_sleep": {
        "title": "phys_sleep",
        "description": "Put all physics in all the worlds to sleep",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "phys_wakeup": {
        "title": "phys_wakeup",
        "description": "Wake all physics objects in the Main physics up",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "physics_add_test": {
        "title": "physics_add_test",
        "description": "add test object",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "physics_debug_entity": {
        "title": "physics_debug_entity",
        "description": "Dumps debug info for an entity",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "physics_highlight_active": {
        "title": "physics_highlight_active",
        "description": "Turns on the absbox for all active physics objects.",
        "args": " un-highlight.",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "physics_remove_test": {
        "title": "physics_remove_test",
        "description": "remove test object",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "physics_report_active": {
        "title": "physics_report_active",
        "description": "Lists all active physics objects",
        "args": " extra info",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "pixelvis_debug": {
        "title": "pixelvis_debug",
        "description": "Dump debug info",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "plant_bomb": {
        "title": "plant_bomb",
        "description": "Plant a bomb where the player is looking.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "play": {
        "title": "play",
        "description": "Play a sound.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "server_can_execute"
        ]
    },
    "playcast": {
        "title": "playcast",
        "description": "Play a broadcast",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "playdemo": {
        "title": "playdemo",
        "description": "Play a recorded demo file (.dem ).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "player_ping": {
        "title": "player_ping",
        "description": "Creates a ping notification where the player is looking.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "playsound": {
        "title": "playsound",
        "description": "playsound <soundname>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "playsoundscape": {
        "title": "playsoundscape",
        "description": "Forces a soundscape to play",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "playvol": {
        "title": "playvol",
        "description": "Play a sound at a specified volume.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "png_screenshot": {
        "title": "png_screenshot",
        "description": "Take a .png screenshot: png_screenshot [filename]",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "pop_var_values": {
        "title": "pop_var_values",
        "description": "Restore previously pushed convars and config values",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "print_changed_convars": {
        "title": "print_changed_convars",
        "description": "Prints all convars that have changed from their default value",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "print_mapgroup": {
        "title": "print_mapgroup",
        "description": "Prints the current mapgroup and the contained maps",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "print_mapgroup_sv": {
        "title": "print_mapgroup_sv",
        "description": "Prints the current mapgroup and the contained maps",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "progress_enable": {
        "title": "progress_enable",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "prop_debug": {
        "title": "prop_debug",
        "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "prop_dynamic_create": {
        "title": "prop_dynamic_create",
        "description": "Creates a dynamic prop with a specific .vmdl aimed away from where the player is looking.",
        "args": " {.vmdl name}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "prop_physics_create": {
        "title": "prop_physics_create",
        "description": "Creates a physics prop with a specific .vmdl aimed away from where the player is looking.",
        "args": " {.vmdl name}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "pulse_debug_entity": {
        "title": "pulse_debug_entity",
        "description": "Opens a graph referencing the selected entity. If it is referenced by more than 1 graph, list all the active pulse graph instances referring to that entity so you can pick which one you want.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "pulse_debug_print": {
        "title": "pulse_debug_print",
        "description": "Usage: pulse_debug_print <vpulse_resource>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "pulse_list_graphs": {
        "title": "pulse_list_graphs",
        "description": "List all the active pulse graph instances",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "pulse_open_graph_id": {
        "title": "pulse_open_graph_id",
        "description": "Open a specific graph instance by id",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "pulse_print_graph_execution_history": {
        "title": "pulse_print_graph_execution_history",
        "description": "Prints the execution history of a graph by filename or instanceid",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "push_var_values": {
        "title": "push_var_values",
        "description": "Save convars and config values",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "quit": {
        "title": "quit",
        "description": "Quit the game",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release",
            "vconsole_set_focus"
        ]
    },
    "r_force_engine_render_frame": {
        "title": "r_force_engine_render_frame",
        "description": "Force a single render of the engine viewport.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "r_gpu_mem_stats": {
        "title": "r_gpu_mem_stats",
        "description": "Display GPU memory usage.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "r_print_buffers": {
        "title": "r_print_buffers",
        "description": "Print Vertex/Index/GPU buffers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "r_render_coordination_state": {
        "title": "r_render_coordination_state",
        "description": "Prints out the current render coordination state.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "r_renderdoc_capture_frame": {
        "title": "r_renderdoc_capture_frame",
        "description": "Triggers a RenderDoc capture",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "r_renderdoc_capture_window_vulkan": {
        "title": "r_renderdoc_capture_window_vulkan",
        "description": "Triggers a RenderDoc capture of a specific Window",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "r_toggleviewportsize": {
        "title": "r_toggleviewportsize",
        "description": "Toggles viewport size between small + full window.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "r_viewport": {
        "title": "r_viewport",
        "description": "Slams viewport size to a specified value.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "radio": {
        "title": "radio",
        "description": "Opens a radio menu",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "radio1": {
        "title": "radio1",
        "description": "Opens a radio menu",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "radio2": {
        "title": "radio2",
        "description": "Opens a radio menu",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "radio3": {
        "title": "radio3",
        "description": "Opens a radio menu",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "rangefinder": {
        "title": "rangefinder",
        "description": "Measures distance along a ray",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "rangefinder2d": {
        "title": "rangefinder2d",
        "description": "Measures distance along a ray, only measuring along XY plane.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "ray_bench": {
        "title": "ray_bench",
        "description": "Load the rays and run the benchmark",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "rcon": {
        "title": "rcon",
        "description": "Issue an rcon command.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "rebuy": {
        "title": "rebuy",
        "description": "Attempt to repurchase items with the order listed in cl_rebuy",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "record": {
        "title": "record",
        "description": "Record a demo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "redirectend": {
        "title": "redirectend",
        "description": "Redirect server console output",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hidden",
            "release"
        ]
    },
    "redirectstart": {
        "title": "redirectstart",
        "description": "Redirect server console output",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "hidden",
            "release"
        ]
    },
    "refresh_ui_audio_state": {
        "title": "refresh_ui_audio_state",
        "description": "Restores audio DSP state for the UI.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "regenerate_weapon_skins": {
        "title": "regenerate_weapon_skins",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "reload_store_config": {
        "title": "reload_store_config",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "reloadgame": {
        "title": "reloadgame",
        "description": "Reload the most recent saved game.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat",
            "vconsole_set_focus"
        ]
    },
    "remove_weapon": {
        "title": "remove_weapon",
        "description": "Remove a weapon held by the player.",
        "args": " <weapon subclass name>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "removeid": {
        "title": "removeid",
        "description": "Remove a user ID from the ban list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "removeip": {
        "title": "removeip",
        "description": "Remove an IP address from the ban list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "repeat_last_console_command": {
        "title": "repeat_last_console_command",
        "description": "Repeat last console command.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "replay_death": {
        "title": "replay_death",
        "description": "start hltv replay of last death",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "replay_start": {
        "title": "replay_start",
        "description": "Start GOTV replay: replay_start <delay> [<player name or index>]",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "replay_stop": {
        "title": "replay_stop",
        "description": "stop hltv replay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "report_entities": {
        "title": "report_entities",
        "description": "Lists all entities",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "report_simthinklist": {
        "title": "report_simthinklist",
        "description": "Lists all simulating/thinking entities",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "report_soundpatch": {
        "title": "report_soundpatch",
        "description": "reports sound patch count",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "reset_gameconvars": {
        "title": "reset_gameconvars",
        "description": "Reset game convars to default values",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "resource_leaks": {
        "title": "resource_leaks",
        "description": "resource_leaks <resource_name>: Show resource leaks for the named resource",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "resource_list": {
        "title": "resource_list",
        "description": "List loaded resources matching a substring",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "resource_log_allocate_timing": {
        "title": "resource_log_allocate_timing",
        "description": "Log time spent in Allocate for all resource types",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "resource_repeated_reload": {
        "title": "resource_repeated_reload",
        "description": "resource_repeated_reload <count> <resource_name> (<resource name> ...): Load and unload the specified resource(s)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "resource_reset_allocate_timing": {
        "title": "resource_reset_allocate_timing",
        "description": "Reset tracked time spent in Allocate (see resource_log_allocate_timing)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "respawn_player": {
        "title": "respawn_player",
        "description": "Respawns the player from death!",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "restart": {
        "title": "restart",
        "description": "Poor man's restart: reload the current map from disk.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat",
            "vconsole_set_focus"
        ]
    },
    "restart_in_insecure": {
        "title": "restart_in_insecure",
        "description": "Restart in insecure mode",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "restart_in_trusted": {
        "title": "restart_in_trusted",
        "description": "Restart in trusted mode",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "restart_in_untrusted": {
        "title": "restart_in_untrusted",
        "description": "Restart in untrusted mode",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "restart_normal": {
        "title": "restart_normal",
        "description": "Restart",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "rr_forceconcept": {
        "title": "rr_forceconcept",
        "description": "fire a response concept directly at a given character.",
        "args": " rr_forceconcept <target name or index> <concept> \"criteria1",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "rr_reloadresponsesystems": {
        "title": "rr_reloadresponsesystems",
        "description": "Reload all response system scripts.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "rs_dump_stats": {
        "title": "rs_dump_stats",
        "description": "rs_dump_stats - Dump resourcesystem stats.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "run_perftest": {
        "title": "run_perftest",
        "description": "Execute perftest.cfg",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat",
            "dontrecord"
        ]
    },
    "save": {
        "title": "save",
        "description": "Save Game",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "dontrecord",
            "defensive"
        ]
    },
    "save_animgraph_recording": {
        "title": "save_animgraph_recording",
        "description": "Saves all active animgraph recordings to disk",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "save_clear_subdirectory": {
        "title": "save_clear_subdirectory",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "replicated",
            "defensive"
        ]
    },
    "save_finish_async": {
        "title": "save_finish_async",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "save_set_subdirectory": {
        "title": "save_set_subdirectory",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "replicated",
            "defensive"
        ]
    },
    "save_showelapsedtime": {
        "title": "save_showelapsedtime",
        "description": "display up-to-date elapsed play time",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "save_watchclass": {
        "title": "save_watchclass",
        "description": "Restrict spew to entities with matching classname",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "save_watchentity": {
        "title": "save_watchentity",
        "description": "Restrict spew to entity index",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "say": {
        "title": "say",
        "description": "Display player message",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "say_team": {
        "title": "say_team",
        "description": "Display player message to team",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "sc_dumpworld": {
        "title": "sc_dumpworld",
        "description": "Dump a list of the objects in a sceneworld (Usage: sc_dumpworld <world_index>)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "sc_dumpworld3d": {
        "title": "sc_dumpworld3d",
        "description": "Dump the objects in a sceneworld into a 3d geoview buffer (Usage: sc_dumpworld3d <world_index>)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "sc_list_extradata_allocations": {
        "title": "sc_list_extradata_allocations",
        "description": "Prints out the overall extra data allocation counts",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "sc_listworlds": {
        "title": "sc_listworlds",
        "description": "List all the active sceneworlds",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "sc_setclassflags": {
        "title": "sc_setclassflags",
        "description": "Low level command to set the flags byte associated with an object class. sc_SetClassFlags <classname> <value>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "sc_showclasses": {
        "title": "sc_showclasses",
        "description": "List the object class names known by scenesystem",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "scene_flush": {
        "title": "scene_flush",
        "description": "Flush all .vcds from the cache and reload from disk.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "scene_playvcd": {
        "title": "scene_playvcd",
        "description": "Play the given VCD as an instanced scripted scene.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "schema_all_list_bindings": {
        "title": "schema_all_list_bindings",
        "description": "schema_all_list_bindings <substring> - List all scopes registered schema bindings (classes & enums). If no substring, list them all.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "schema_detailed_class_layout": {
        "title": "schema_detailed_class_layout",
        "description": "schema_detailed_class_layout <class_name> - Print a detailed memory layout of the class (including inline structs).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "schema_dump_binding": {
        "title": "schema_dump_binding",
        "description": "schema_dump_binding <class_or_enum_name> - Print information about the named class or enum.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "schema_list_bindings": {
        "title": "schema_list_bindings",
        "description": "schema_list_bindings <substring> - List registered global-scope schema bindings (classes & enums). If no substring, list them all.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "schema_meta_stats": {
        "title": "schema_meta_stats",
        "description": "schema_meta_stats [<options>]- Print a summary of schemasystem metadata statistics.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "schema_stats": {
        "title": "schema_stats",
        "description": "schema_stats - Print a summary of various schemasystem statistics.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "screenshot": {
        "title": "screenshot",
        "description": "Take a screenshot: screenshot [filename]",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "script_add_debug_filter": {
        "title": "script_add_debug_filter",
        "description": "Add a filter to the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_add_watch": {
        "title": "script_add_watch",
        "description": "Add a watch to the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_add_watch_pattern": {
        "title": "script_add_watch_pattern",
        "description": "Add a watch to the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_attach_debugger": {
        "title": "script_attach_debugger",
        "description": "Connect the vscript VM to the script debugger",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_clear_watches": {
        "title": "script_clear_watches",
        "description": "Clear all watches from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_debug": {
        "title": "script_debug",
        "description": "Toggle the in-game script debug features",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_dump_all": {
        "title": "script_dump_all",
        "description": "Dump the state of the VM to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_find": {
        "title": "script_find",
        "description": "Find a key in the VM",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_help": {
        "title": "script_help",
        "description": "Output help for script functions",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_help2": {
        "title": "script_help2",
        "description": "Output help for script functions suitable for auto-completion",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "script_reload": {
        "title": "script_reload",
        "description": "Reload scripts",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_reload_code": {
        "title": "script_reload_code",
        "description": "Execute a vscript file, replacing existing functions with the functions in the run script",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_reload_entity_code": {
        "title": "script_reload_entity_code",
        "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_remove_debug_filter": {
        "title": "script_remove_debug_filter",
        "description": "Remove a filter from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_remove_watch": {
        "title": "script_remove_watch",
        "description": "Remove a watch from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_remove_watch_pattern": {
        "title": "script_remove_watch_pattern",
        "description": "Remove a watch from the game debug overlay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_resurrect_unreachable": {
        "title": "script_resurrect_unreachable",
        "description": "Use the garbage collector to track down reference cycles",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_trace_disable": {
        "title": "script_trace_disable",
        "description": "Turn off a particular trace output by file or function name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_trace_disable_all": {
        "title": "script_trace_disable_all",
        "description": "Turn off all trace output",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_trace_disable_key": {
        "title": "script_trace_disable_key",
        "description": "Turn off a particular trace output by table/instance",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_trace_enable": {
        "title": "script_trace_enable",
        "description": "Turn on a particular trace output by file or function name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_trace_enable_all": {
        "title": "script_trace_enable_all",
        "description": "Turn on all trace output",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "script_trace_enable_key": {
        "title": "script_trace_enable_key",
        "description": "Turn on a particular trace output by table/instance",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "scrubber": {
        "title": "scrubber",
        "description": "Scrub system off - not a dev build",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "sellbackall": {
        "title": "sellbackall",
        "description": "Attempt to refund all equipment",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "send_round_backup_file_list": {
        "title": "send_round_backup_file_list",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "hidden",
            "release"
        ]
    },
    "server_game_time": {
        "title": "server_game_time",
        "description": "Gives the game time in seconds (server's curtime)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "server_snd_cast": {
        "title": "server_snd_cast",
        "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "servervoice_clear": {
        "title": "servervoice_clear",
        "description": "servervoice_clear",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "servervoice_dump": {
        "title": "servervoice_dump",
        "description": "servervoice_dump",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "setang": {
        "title": "setang",
        "description": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "setang_exact": {
        "title": "setang_exact",
        "description": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "setinfo": {
        "title": "setinfo",
        "description": "Adds a new user info value",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientcmd_can_execute"
        ]
    },
    "setmodel": {
        "title": "setmodel",
        "description": "Changes's player's model",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "setpause": {
        "title": "setpause",
        "description": "Set the pause state of the server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "setpos": {
        "title": "setpos",
        "description": "Move player to specified origin (must have sv_cheats).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "setpos_exact": {
        "title": "setpos_exact",
        "description": "Move player to an exact specified origin (must have sv_cheats).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "setpos_player": {
        "title": "setpos_player",
        "description": "Move specified player to specified origin (must have sv_cheats).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "client_can_execute"
        ]
    },
    "shake": {
        "title": "shake",
        "description": "Shake the screen.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "shake_stop": {
        "title": "shake_stop",
        "description": "Stops all active screen shakes.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "shake_testpunch": {
        "title": "shake_testpunch",
        "description": "Test a punch-style screen shake.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "shatterglass_break": {
        "title": "shatterglass_break",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "shatterglass_restore": {
        "title": "shatterglass_restore",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "show_loadout_toggle": {
        "title": "show_loadout_toggle",
        "description": "Toggles loadout display",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "show_untrusted_warning_again": {
        "title": "show_untrusted_warning_again",
        "description": "Show untrusted warning again",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "clientcmd_can_execute"
        ]
    },
    "showconsole": {
        "title": "showconsole",
        "description": "Show the console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "showtriggers": {
        "title": "showtriggers",
        "description": "Enable or Disable showing trigger entities",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "showtriggers_toggle": {
        "title": "showtriggers_toggle",
        "description": "Displays the movement bounding box for the triggers in orange.  Some entites will also display entity specific overlays.",
        "args": "   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "slot0": {
        "title": "slot0",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot1": {
        "title": "slot1",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot10": {
        "title": "slot10",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot11": {
        "title": "slot11",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot12": {
        "title": "slot12",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot13": {
        "title": "slot13",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot2": {
        "title": "slot2",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot3": {
        "title": "slot3",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot4": {
        "title": "slot4",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot5": {
        "title": "slot5",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot6": {
        "title": "slot6",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot7": {
        "title": "slot7",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot8": {
        "title": "slot8",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "slot9": {
        "title": "slot9",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "snapto": {
        "title": "snapto",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "snd_arrangement_start": {
        "title": "snd_arrangement_start",
        "description": "Starts the specified arrangement.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_async_flush": {
        "title": "snd_async_flush",
        "description": "Flush all unlocked async audio data",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_async_showmem": {
        "title": "snd_async_showmem",
        "description": "Show async memory stats",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_async_showmem_music": {
        "title": "snd_async_showmem_music",
        "description": "Show async memory stats for just non-streamed music",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_async_showmem_summary": {
        "title": "snd_async_showmem_summary",
        "description": "Show brief async memory stats",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_cast": {
        "title": "snd_cast",
        "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically if cl_snd_cast_retrigger is set. The sound event will clear previous snd_cast events if cl_snd_cast_clear is set. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_compare_soundevents": {
        "title": "snd_compare_soundevents",
        "description": "Compare the compiled and loaded contents of 2 soundevents.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "cheat"
        ]
    },
    "snd_cs_duck_reverb": {
        "title": "snd_cs_duck_reverb",
        "description": "One shot trigger to duck reverb for a few seconds.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "snd_front_headphone_position": {
        "title": "snd_front_headphone_position",
        "description": "Specifies the position (in degrees) of the virtual front left/right headphones.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_front_stereo_speaker_position": {
        "title": "snd_front_stereo_speaker_position",
        "description": "Specifies the position (in degrees) of the virtual front left/right speakers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_front_surround_speaker_position": {
        "title": "snd_front_surround_speaker_position",
        "description": "Specifies the position (in degrees) of the virtual front left/right speakers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_get_physics_surface_properties": {
        "title": "snd_get_physics_surface_properties",
        "description": "Get physics surface properties for all the materials.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_headphone_pan_exponent": {
        "title": "snd_headphone_pan_exponent",
        "description": "Specifies the exponent for the pan xfade from phone to phone if the \"exp\" pan law is being used.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_headphone_pan_radial_weight": {
        "title": "snd_headphone_pan_radial_weight",
        "description": "Apply cos(angle) * weight before pan law",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_list_deferred_soundevents": {
        "title": "snd_list_deferred_soundevents",
        "description": "List all current deferred load soundevents",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "cheat"
        ]
    },
    "snd_list_soundevents": {
        "title": "snd_list_soundevents",
        "description": "List all available soundevents",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "cheat"
        ]
    },
    "snd_list_soundevents_by_stack": {
        "title": "snd_list_soundevents_by_stack",
        "description": "List all available soundevents using specified stack name",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "cheat"
        ]
    },
    "snd_print_activetracks": {
        "title": "snd_print_activetracks",
        "description": "List all active tracks",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_print_arrangements": {
        "title": "snd_print_arrangements",
        "description": "List all available sequence arrangments",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_print_current_mixer_mixgroup": {
        "title": "snd_print_current_mixer_mixgroup",
        "description": "Get data related to mix group matching string",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_print_samplers": {
        "title": "snd_print_samplers",
        "description": "List all available samplers",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_print_sequences": {
        "title": "snd_print_sequences",
        "description": "List all available midi sequences",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_print_soundevent": {
        "title": "snd_print_soundevent",
        "description": "Print the data associated with the specified soundevent.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "vconsole_fuzzy_matching",
            "vconsole_set_focus"
        ]
    },
    "snd_print_soundevent_default_public_properties": {
        "title": "snd_print_soundevent_default_public_properties",
        "description": "Print the default public properties of a specified soundevent. Values do not reflect values set on the soundevent. For that see \"snd_print_soundevent\"",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "vconsole_fuzzy_matching",
            "vconsole_set_focus"
        ]
    },
    "snd_rear_headphone_position": {
        "title": "snd_rear_headphone_position",
        "description": "Specifies the position  (in degrees) of the virtual rear left/right headphones.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_rear_stereo_speaker_position": {
        "title": "snd_rear_stereo_speaker_position",
        "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_rear_surround_speaker_position": {
        "title": "snd_rear_surround_speaker_position",
        "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_remove_all_soundevents": {
        "title": "snd_remove_all_soundevents",
        "description": "Remove all soundevents",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "cheat"
        ]
    },
    "snd_remove_soundevent": {
        "title": "snd_remove_soundevent",
        "description": "Remove the specified soundevent",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "cheat"
        ]
    },
    "snd_samplers_play_note": {
        "title": "snd_samplers_play_note",
        "description": "Play a note from a specified sampler",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_samplers_stop_note": {
        "title": "snd_samplers_stop_note",
        "description": "Stop a note from a specified sampler",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sequence_set_track_bpm": {
        "title": "snd_sequence_set_track_bpm",
        "description": "Sets the tempo of the specified track",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sequence_set_track_transpose": {
        "title": "snd_sequence_set_track_transpose",
        "description": "Sets the transposition of the specified track",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sequence_stop_all_tracks": {
        "title": "snd_sequence_stop_all_tracks",
        "description": "Stops all currently playing sequences",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sequence_stop_track": {
        "title": "snd_sequence_stop_track",
        "description": "Stops the specified track",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_set_physics_surface_properties": {
        "title": "snd_set_physics_surface_properties",
        "description": "Set physics surface properties for materials. Usage: <heuristic #> <commit>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_setmixer": {
        "title": "snd_setmixer",
        "description": "Set named Mixgroup of current mixer to mix vol, mute, solo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_setmixlayer": {
        "title": "snd_setmixlayer",
        "description": "Set named Mixgroup of named mix layer to mix vol, mute, solo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_side_surround_speaker_position": {
        "title": "snd_side_surround_speaker_position",
        "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_sos_cl_soundevent_pause_last": {
        "title": "snd_sos_cl_soundevent_pause_last",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "snd_sos_cl_soundevent_start": {
        "title": "snd_sos_cl_soundevent_start",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "snd_sos_cl_soundevent_stop_last": {
        "title": "snd_sos_cl_soundevent_stop_last",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "snd_sos_cl_soundevent_unpause_last": {
        "title": "snd_sos_cl_soundevent_unpause_last",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "snd_sos_compare_operator_stacks": {
        "title": "snd_sos_compare_operator_stacks",
        "description": "Compares 2 operator stacks and spews any errors",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_flush_operators": {
        "title": "snd_sos_flush_operators",
        "description": "Flush and re-parse the sound operator system",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_get_operator_field_info": {
        "title": "snd_sos_get_operator_field_info",
        "description": "Currently gets info for a single operator field",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_pause_soundevent": {
        "title": "snd_sos_pause_soundevent",
        "description": "Pause the specified soundevent in the list",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_class_sizes": {
        "title": "snd_sos_print_class_sizes",
        "description": "Prints the sizes of relevant sos classes.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_field_name_strings": {
        "title": "snd_sos_print_field_name_strings",
        "description": "Prints a list of currently cached field name strings",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_groups": {
        "title": "snd_sos_print_groups",
        "description": "Prints the current state of the groups system",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_operator_stack": {
        "title": "snd_sos_print_operator_stack",
        "description": "Prints a master list of currently exposed variables",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_operator_stack_operator": {
        "title": "snd_sos_print_operator_stack_operator",
        "description": "Prints an operator from a stack",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_operator_stacks": {
        "title": "snd_sos_print_operator_stacks",
        "description": "Prints a list of currently available stacks",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_operators": {
        "title": "snd_sos_print_operators",
        "description": "Prints a list of currently available operators",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_stack_exec_list": {
        "title": "snd_sos_print_stack_exec_list",
        "description": "Prints the current stack execution list",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_strings": {
        "title": "snd_sos_print_strings",
        "description": "Prints a list of currently cached strings",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_print_tool_properties": {
        "title": "snd_sos_print_tool_properties",
        "description": "Prints the current state of tool properties.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_resolve_execute_operator": {
        "title": "snd_sos_resolve_execute_operator",
        "description": "Resolve the inputs and execute one specified operator from a specified stack",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_set_operator_field": {
        "title": "snd_sos_set_operator_field",
        "description": "Currently sets a single float operator field",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_set_operator_field_by_guid": {
        "title": "snd_sos_set_operator_field_by_guid",
        "description": "Currently sets a single float operator field",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_soundevent_profile": {
        "title": "snd_sos_soundevent_profile",
        "description": "Dump a record of current soundevents and profile data",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_start_soundevent": {
        "title": "snd_sos_start_soundevent",
        "description": "Starts a specified soundevent",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_start_soundevent_at_pos": {
        "title": "snd_sos_start_soundevent_at_pos",
        "description": "Starts a specified soundevent at the given position",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_start_stack": {
        "title": "snd_sos_start_stack",
        "description": "Starts a specified stack via an empty soundevent",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_stop_all_soundevents": {
        "title": "snd_sos_stop_all_soundevents",
        "description": "Stops all soundevents currently on the execution list",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_stop_soundevent_guid": {
        "title": "snd_sos_stop_soundevent_guid",
        "description": "Stops a specified soundevent",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_stop_soundevent_index": {
        "title": "snd_sos_stop_soundevent_index",
        "description": "Stops a specified soundevent",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_sv_soundevent_pause_last": {
        "title": "snd_sos_sv_soundevent_pause_last",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "snd_sos_sv_soundevent_start": {
        "title": "snd_sos_sv_soundevent_start",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "snd_sos_sv_soundevent_stop_last": {
        "title": "snd_sos_sv_soundevent_stop_last",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "snd_sos_sv_soundevent_unpause_last": {
        "title": "snd_sos_sv_soundevent_unpause_last",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "snd_sos_sv_test_gender": {
        "title": "snd_sos_sv_test_gender",
        "description": "Test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "snd_sos_test_soundmessage": {
        "title": "snd_sos_test_soundmessage",
        "description": "test",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_sos_unpause_soundevent": {
        "title": "snd_sos_unpause_soundevent",
        "description": "UnPause the first soundevent in the list",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_soundevent_clear_deferred": {
        "title": "snd_soundevent_clear_deferred",
        "description": "Clear the list of deferred soundevents for loading.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "cheat"
        ]
    },
    "snd_soundmixer_flush": {
        "title": "snd_soundmixer_flush",
        "description": "Reload soundmixers.txt file.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_soundmixer_list_mix_groups": {
        "title": "snd_soundmixer_list_mix_groups",
        "description": "List all mix groups to dev console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_soundmixer_list_mix_layers": {
        "title": "snd_soundmixer_list_mix_layers",
        "description": "List all mix layers to dev console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_soundmixer_list_mixers": {
        "title": "snd_soundmixer_list_mixers",
        "description": "List all mixers to dev console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_soundmixer_set_trigger_factor": {
        "title": "snd_soundmixer_set_trigger_factor",
        "description": "Set named mix layer / mix group, trigger amount.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_soundmixer_setmixlayer_amount": {
        "title": "snd_soundmixer_setmixlayer_amount",
        "description": "Set named mix layer mix amount.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_steamaudio_display_probes": {
        "title": "snd_steamaudio_display_probes",
        "description": "Load all the probes from a file and display probes based on the passed on arguments.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_steamaudio_export_scene": {
        "title": "snd_steamaudio_export_scene",
        "description": "Exports scene currently used by Steam Audio as a phononscene file.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "snd_stereo_speaker_pan_exponent": {
        "title": "snd_stereo_speaker_pan_exponent",
        "description": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_stereo_speaker_pan_radial_weight": {
        "title": "snd_stereo_speaker_pan_radial_weight",
        "description": "Apply cos(angle) * weight before pan law",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_surround_speaker_pan_exponent": {
        "title": "snd_surround_speaker_pan_exponent",
        "description": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_surround_speaker_pan_radial_weight": {
        "title": "snd_surround_speaker_pan_radial_weight",
        "description": "Apply cos(angle) * weight before pan law",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "snd_vmidi_flush": {
        "title": "snd_vmidi_flush",
        "description": "Purge and reload all vmidi data and files.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "sndplaydelay": {
        "title": "sndplaydelay",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "soundinfo": {
        "title": "soundinfo",
        "description": "Describe the current sound device with an active voice list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "soundlist": {
        "title": "soundlist",
        "description": "List all known sounds.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "soundscape_dumpclient": {
        "title": "soundscape_dumpclient",
        "description": "Dumps the client's soundscape data.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "soundscape_flush": {
        "title": "soundscape_flush",
        "description": "Flushes the server & client side soundscapes",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "soundsysteminfo": {
        "title": "soundsysteminfo",
        "description": "Describe the current sound device without an active voice list.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "spec_goto": {
        "title": "spec_goto",
        "description": "Move the spectator camera to a specific location. `spec_goto x y z pitch yaw`",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "spec_lock_to_current_player": {
        "title": "spec_lock_to_current_player",
        "description": "As an observer, lock the spectator target to the currently observed target",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "spec_mode": {
        "title": "spec_mode",
        "description": "Set spectator mode",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "spec_next": {
        "title": "spec_next",
        "description": "Spectate next player",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "spec_player": {
        "title": "spec_player",
        "description": "Spectate a player by name or slot",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "spec_pos": {
        "title": "spec_pos",
        "description": "dump position and angles to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "spec_prev": {
        "title": "spec_prev",
        "description": "Spectate previous player",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "clientcmd_can_execute"
        ]
    },
    "spew_fonts": {
        "title": "spew_fonts",
        "description": "Spew information about font manager fonts",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "splitscreen_testreadconfigconflict": {
        "title": "splitscreen_testreadconfigconflict",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "ss_add": {
        "title": "ss_add",
        "description": "Adds a splitscreen user.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "ss_remove": {
        "title": "ss_remove",
        "description": "Removes a splitscreen user.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "ss_teleport": {
        "title": "ss_teleport",
        "description": "Teleport other splitscreen player to my location.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "cheat"
        ]
    },
    "startdemos": {
        "title": "startdemos",
        "description": "Play demos in demo sequence.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "startmovie": {
        "title": "startmovie",
        "description": "Start recording movie frames.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "dontrecord",
            "defensive"
        ]
    },
    "stats": {
        "title": "stats",
        "description": "Prints server performance variables",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "stats_print": {
        "title": "stats_print",
        "description": "Prints out perf statistics to the console, clears perf history",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "stats_print_gpu": {
        "title": "stats_print_gpu",
        "description": "Prints out GPU perf statistics to the console.  Requires stats_display > 0, and stats_collect_gpu = true.  Optional argument of CSV filename",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "status": {
        "title": "status",
        "description": "Print connection status",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "status_json": {
        "title": "status_json",
        "description": "Print status in JSON format",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "steamvrevent_quit": {
        "title": "steamvrevent_quit",
        "description": "steamvrevent_quit",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "hidden",
            "defensive"
        ]
    },
    "stop": {
        "title": "stop",
        "description": "Finish recording demo.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "stopdemos": {
        "title": "stopdemos",
        "description": "Stop looping demos (current demo will complete).",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "stopsound": {
        "title": "stopsound",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "stopsoundscape": {
        "title": "stopsoundscape",
        "description": "Stops all soundscape processing and fades current looping sounds",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "subclass_change": {
        "title": "subclass_change",
        "description": "Changes the subclass of the given entity.",
        "args": "   \t<new_subclass> {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "subclass_create": {
        "title": "subclass_create",
        "description": "Creates an entity of the given subclass where the player is looking.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat",
            "vconsole_fuzzy_matching"
        ]
    },
    "surfaceprop": {
        "title": "surfaceprop",
        "description": "Reports the surface properties at the cursor",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "sv_annotation_give_weapon": {
        "title": "sv_annotation_give_weapon",
        "description": "Give weapon required by annotation",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "hidden",
            "release"
        ]
    },
    "sv_annotation_remove_weapon": {
        "title": "sv_annotation_remove_weapon",
        "description": "Remove weapon given by annotation",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "hidden",
            "release"
        ]
    },
    "sv_clientrates": {
        "title": "sv_clientrates",
        "description": "Show client rates.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "sv_cs_dump_econ_item_stringtable": {
        "title": "sv_cs_dump_econ_item_stringtable",
        "description": "sv_cs_dump_econ_item_stringtable",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "sv_dev_simulate_gcdown": {
        "title": "sv_dev_simulate_gcdown",
        "description": "<state> Turn on/off simulated GC communications failure (GC is down in a way that we know it is down)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "sv_explode_inferno_at_crosshair": {
        "title": "sv_explode_inferno_at_crosshair",
        "description": "explodes molotov(0) or Incendiary (1) at crosshair location with single param",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "sv_explode_smokegrenade_at_crosshair": {
        "title": "sv_explode_smokegrenade_at_crosshair",
        "description": "explodes smoke grenade at crosshair location",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "sv_fullupdate": {
        "title": "sv_fullupdate",
        "description": "Force a full update for all clients.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "sv_game_mode_convars": {
        "title": "sv_game_mode_convars",
        "description": "Display the values of the convars for the current game_mode.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "sv_kill_smokegrenade": {
        "title": "sv_kill_smokegrenade",
        "description": "kill all smoke grenades",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "sv_load_forced_client_names_file": {
        "title": "sv_load_forced_client_names_file",
        "description": "Loads a file containing SteamID64 names for clients",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "sv_load_random_client_names_file": {
        "title": "sv_load_random_client_names_file",
        "description": "Loads a file containing random name words for clients",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "sv_metaduplication": {
        "title": "sv_metaduplication",
        "description": "Check serializer meta for duplication, add verbose to command for full spew",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "sv_packstats": {
        "title": "sv_packstats",
        "description": "Show entity packing stats, pass 'clear' as argument to reset counts.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "sv_pure": {
        "title": "sv_pure",
        "description": "Show user data.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "sv_querycache_stats": {
        "title": "sv_querycache_stats",
        "description": "Display status of the query cache (client only)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "sv_rethrow_last_grenade": {
        "title": "sv_rethrow_last_grenade",
        "description": "Emit the last grenade thrown on the server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "sv_setsteamaccount": {
        "title": "sv_setsteamaccount",
        "description": "token",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "sv_showtags": {
        "title": "sv_showtags",
        "description": "Describe current gametags.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "sv_shutdown": {
        "title": "sv_shutdown",
        "description": "Sets the server to shutdown when all games have completed",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "sv_soundscape_printdebuginfo": {
        "title": "sv_soundscape_printdebuginfo",
        "description": "print soundscapes",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "sv_spewmeta": {
        "title": "sv_spewmeta",
        "description": "Spew serializer meta",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "sv_spewworldgroups": {
        "title": "sv_spewworldgroups",
        "description": "Spew world groups (server)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly"
        ]
    },
    "sv_throw_decoygrenade": {
        "title": "sv_throw_decoygrenade",
        "description": "throw decoy grenade with parmas.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "sv_throw_flashgrenade": {
        "title": "sv_throw_flashgrenade",
        "description": "throw flash grenade with parmas.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "sv_throw_hegrenade": {
        "title": "sv_throw_hegrenade",
        "description": "throw HEgrenade with parmas.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "sv_throw_molotov": {
        "title": "sv_throw_molotov",
        "description": "throw molotov grenade with parmas.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "sv_throw_smokegrenade": {
        "title": "sv_throw_smokegrenade",
        "description": "throw smoke grenade with parmas.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "cheat"
        ]
    },
    "switchhands": {
        "title": "switchhands",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "switchhandsleft": {
        "title": "switchhandsleft",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "switchhandsright": {
        "title": "switchhandsright",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "sys_info": {
        "title": "sys_info",
        "description": "Print system information to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "teammenu": {
        "title": "teammenu",
        "description": "Show team selection window",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "server_can_execute"
        ]
    },
    "telemetry_message": {
        "title": "telemetry_message",
        "description": "Place a message in the telemetry timeline",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "telemetry_toggle_timespan": {
        "title": "telemetry_toggle_timespan",
        "description": "Starts/stops a timespan with an ever increasing name.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "test_dispatcheffect": {
        "title": "test_dispatcheffect",
        "description": "Test a clientside dispatch effect.",
        "args": " test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "test_entity_blocker": {
        "title": "test_entity_blocker",
        "description": "Test command that drops an entity blocker out in front of the player.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "test_list_entities": {
        "title": "test_list_entities",
        "description": "test-list entities",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "cheat"
        ]
    },
    "test_voice_container_nesting": {
        "title": "test_voice_container_nesting",
        "description": "Test nesting voice containers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "test_voice_containers": {
        "title": "test_voice_containers",
        "description": "Quick example for how we'd derive traits from voice containers.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "thirdperson": {
        "title": "thirdperson",
        "description": "Switch to thirdperson camera.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat",
            "execute_per_tick"
        ]
    },
    "thirdperson_mayamode": {
        "title": "thirdperson_mayamode",
        "description": "Switch to thirdperson Maya-like camera controls.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "cheat"
        ]
    },
    "thirdpersonshoulder": {
        "title": "thirdpersonshoulder",
        "description": "Switch to thirdperson-shoulder camera.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "timedemo": {
        "title": "timedemo",
        "description": "Play a demo and report performance info.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "timedemoquit": {
        "title": "timedemoquit",
        "description": "Play a demo, report performance info, and then exit",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "timeleft": {
        "title": "timeleft",
        "description": "prints the time remaining in the match",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "client_can_execute"
        ]
    },
    "timeout_ct_start": {
        "title": "timeout_ct_start",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "timeout_terrorist_start": {
        "title": "timeout_terrorist_start",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "gamedll",
            "release"
        ]
    },
    "toggle": {
        "title": "toggle",
        "description": "Toggles specified convar value on and off.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "togglerdropt": {
        "title": "toggleRdrOpt",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll"
        ]
    },
    "toggleconsole": {
        "title": "toggleconsole",
        "description": "Show/hide the console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "dontrecord",
            "release"
        ]
    },
    "toggleradarscale": {
        "title": "toggleradarscale",
        "description": "Toggles the radar scale",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "traceattack": {
        "title": "traceattack",
        "description": "traceattack damage hitgroup",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "tv_broadcast_resend": {
        "title": "tv_broadcast_resend",
        "description": "resend broadcast data to broadcast relay",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "tv_broadcast_status": {
        "title": "tv_broadcast_status",
        "description": "Print out broadcast status",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_clients": {
        "title": "tv_clients",
        "description": "Shows list of connected SourceTV clients.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_mem": {
        "title": "tv_mem",
        "description": "hltv memory statistics. Use with \"ent 10\" (dump entity 10 memory usage) or \"top 8\" (dump top 8 memory users) or \"class\" CWorld (dump CWorld class)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_msg": {
        "title": "tv_msg",
        "description": "Send a screen message to all clients.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll",
            "defensive"
        ]
    },
    "tv_record": {
        "title": "tv_record",
        "description": "Starts SourceTV demo recording.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_relay": {
        "title": "tv_relay",
        "description": "Connect to SourceTV server and relay broadcast.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_retry": {
        "title": "tv_retry",
        "description": "Reconnects the SourceTV relay proxy.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_status": {
        "title": "tv_status",
        "description": "Show SourceTV server status.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_stop": {
        "title": "tv_stop",
        "description": "Stops the SourceTV broadcast.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "tv_stoprecord": {
        "title": "tv_stoprecord",
        "description": "Stops SourceTV demo recording.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "unbind": {
        "title": "unbind",
        "description": "Unbind a key.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "unbindall": {
        "title": "unbindall",
        "description": "Unbind all keys.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "unpause": {
        "title": "unpause",
        "description": "Clear the pause state of the server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    },
    "url_execute": {
        "title": "url_execute",
        "description": "Executes url-based commands, used for incoming commands from url-based launches when the game's already running.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "clientdll",
            "defensive"
        ]
    },
    "users": {
        "title": "users",
        "description": "Show user info for players on server.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_currentcluster": {
        "title": "vis_debug_currentcluster",
        "description": "Show the current cluster number",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_drawcluster": {
        "title": "vis_debug_drawcluster",
        "description": "Add cluster # to visualization, (-1) to clear",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_dumpvisibleclusters": {
        "title": "vis_debug_dumpvisibleclusters",
        "description": "Show the list of visible clusters",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_find_los": {
        "title": "vis_debug_find_los",
        "description": "Find or clear the vis LOS to here",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_lock": {
        "title": "vis_debug_lock",
        "description": "Lock vis LOS origin to current",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_record_start": {
        "title": "vis_debug_record_start",
        "description": "Record a path to debug vis",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_record_stop": {
        "title": "vis_debug_record_stop",
        "description": "Record a path to debug vis",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_show": {
        "title": "vis_debug_show",
        "description": "Show/hide the vis debug visualization",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_sunclusters": {
        "title": "vis_debug_sunclusters",
        "description": "Showing clusters for sun/csm rendering. Red (full sun csm & lighting), Orange (no viewmodel sun or csm), Green (no sun at all)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vis_debug_tracelos": {
        "title": "vis_debug_tracelos",
        "description": "Trace rays and check vis from the current camera",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vmem_dump": {
        "title": "vmem_dump",
        "description": "Dump memory stats to log.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vmix_debug_list": {
        "title": "vmix_debug_list",
        "description": "Debug dump the list of available vmix graphs",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vmix_input": {
        "title": "vmix_input",
        "description": "Set an input mix value",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "vmix_output": {
        "title": "vmix_output",
        "description": "Dump main graph control output values",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "cheat"
        ]
    },
    "voice_containers_get_instance_args": {
        "title": "voice_containers_get_instance_args",
        "description": "Args: [Voice Container Path]",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "voice_containers_get_instance_params": {
        "title": "voice_containers_get_instance_params",
        "description": "Args: [Voice Container Path]",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "linked_concommand",
            "developmentonly",
            "defensive"
        ]
    },
    "voice_modenable_toggle": {
        "title": "voice_modenable_toggle",
        "description": "Toggle the voice_modenable convar.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "voice_mute": {
        "title": "voice_mute",
        "description": "Mute a specific Steam user",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "voice_reset_mutelist": {
        "title": "voice_reset_mutelist",
        "description": "Reset all mute information for all players who were ever muted.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "voice_show_mute": {
        "title": "voice_show_mute",
        "description": "Show whether current players are muted.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "voice_unmute": {
        "title": "voice_unmute",
        "description": "Unmute a specific Steam user, or `all` to unmute all connected players.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_dump_counters": {
        "title": "vprof_dump_counters",
        "description": "Dump vprof counters to the console",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_generate_report": {
        "title": "vprof_generate_report",
        "description": "Generate a report to the console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_generate_report_budget": {
        "title": "vprof_generate_report_budget",
        "description": "Generate a report to the console based on budget group.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_generate_report_hierarchy": {
        "title": "vprof_generate_report_hierarchy",
        "description": "Generate a report to the console.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_loadhitstore_scale": {
        "title": "vprof_loadhitstore_scale",
        "description": "Scale used when displaying load-hit-stores (0 = use default)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "hidden"
        ]
    },
    "vprof_off": {
        "title": "vprof_off",
        "description": "Disable vprof",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_on": {
        "title": "vprof_on",
        "description": "Enable vprof",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_remote_start": {
        "title": "vprof_remote_start",
        "description": "Request a VProf data stream from the remote server (requires authentication)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_remote_stop": {
        "title": "vprof_remote_stop",
        "description": "Stop an existing remote VProf data request",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_reset": {
        "title": "vprof_reset",
        "description": "Reset the stats in VProf profiler",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_reset_peaks": {
        "title": "vprof_reset_peaks",
        "description": "Reset just the peak time in VProf profiler",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vprof_time_scale": {
        "title": "vprof_time_scale",
        "description": "Scale used when displaying time (0 = use default)",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "hidden"
        ]
    },
    "vtune": {
        "title": "vtune",
        "description": "Controls VTune's sampling.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vulkan_framebuffermgr_print": {
        "title": "vulkan_framebuffermgr_print",
        "description": "Prints out stats for the Vulkan Framebuffer manager",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vulkan_memgr_fragmentation_print": {
        "title": "vulkan_memgr_fragmentation_print",
        "description": "Prints out detailed memory fragmentation stats for the Vulkan memory manager",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vulkan_memgr_print": {
        "title": "vulkan_memgr_print",
        "description": "Prints out stats for the Vulkan memory manager",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vulkan_pipelinemgr_print": {
        "title": "vulkan_pipelinemgr_print",
        "description": "Prints out stats for the Vulkan Pipeline manager",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vulkan_shader_table_print": {
        "title": "vulkan_shader_table_print",
        "description": "Prints out stats for the Vulkan shader table",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vulkan_vma_defrag": {
        "title": "vulkan_vma_defrag",
        "description": "Force defragmenting memory with VMA",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "vulkan_vma_gpu_mem_dump": {
        "title": "vulkan_vma_gpu_mem_dump",
        "description": "Dump .json file for use by GpuMemDumpVis.py",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "weapon_switch": {
        "title": "weapon_switch",
        "description": "Use a particular weapon",
        "args": " <weapon_name>",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "gamedll"
        ]
    },
    "workshop_annotation_submit": {
        "title": "workshop_annotation_submit",
        "description": "Submit annotation to workshop.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "release"
        ]
    },
    "workshop_item_submit": {
        "title": "workshop_item_submit",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "release"
        ]
    },
    "workshop_tournament_item_submit": {
        "title": "workshop_tournament_item_submit",
        "description": "<no description>",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "clientdll",
            "hidden",
            "release"
        ]
    },
    "world_dump_loaded_worlds": {
        "title": "world_dump_loaded_worlds",
        "description": "Dump all of the worlds that we know about",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "world_layer_list": {
        "title": "world_layer_list",
        "description": "List all world layers",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "world_layer_set_visible": {
        "title": "world_layer_set_visible",
        "description": "Show or hide the specified world layer",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "writeid": {
        "title": "writeid",
        "description": "Writes a list of permanently-banned user IDs to file.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "writeip": {
        "title": "writeip",
        "description": "Save the ban list to file.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "developmentonly",
            "defensive"
        ]
    },
    "writekeybindings": {
        "title": "writekeybindings",
        "description": "Saves current key bindings to disk.",
        "args": "",
        "template": "command-syntax",
        "flags": [
            "release"
        ]
    }
}